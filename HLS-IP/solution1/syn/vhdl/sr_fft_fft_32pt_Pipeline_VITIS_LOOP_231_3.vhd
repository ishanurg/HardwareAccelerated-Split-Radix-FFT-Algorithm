-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sr_fft_fft_32pt_Pipeline_VITIS_LOOP_231_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    e_out_real_V_9_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_real_V_9_ce0 : OUT STD_LOGIC;
    e_out_real_V_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_real_V_10_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_real_V_10_ce0 : OUT STD_LOGIC;
    e_out_real_V_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_imag_V_9_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_imag_V_9_ce0 : OUT STD_LOGIC;
    e_out_imag_V_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_imag_V_10_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_imag_V_10_ce0 : OUT STD_LOGIC;
    e_out_imag_V_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_real_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_real_2_ce0 : OUT STD_LOGIC;
    out_real_2_we0 : OUT STD_LOGIC;
    out_real_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_real_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_real_3_ce0 : OUT STD_LOGIC;
    out_real_3_we0 : OUT STD_LOGIC;
    out_real_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_imag_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_imag_2_ce0 : OUT STD_LOGIC;
    out_imag_2_we0 : OUT STD_LOGIC;
    out_imag_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_imag_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_imag_3_ce0 : OUT STD_LOGIC;
    out_imag_3_we0 : OUT STD_LOGIC;
    out_imag_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_real_4_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_real_4_ce0 : OUT STD_LOGIC;
    out_real_4_we0 : OUT STD_LOGIC;
    out_real_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_imag_4_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_imag_4_ce0 : OUT STD_LOGIC;
    out_imag_4_we0 : OUT STD_LOGIC;
    out_imag_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_imag_5_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_imag_5_ce0 : OUT STD_LOGIC;
    out_imag_5_we0 : OUT STD_LOGIC;
    out_imag_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_real_6_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_real_6_ce0 : OUT STD_LOGIC;
    out_real_6_we0 : OUT STD_LOGIC;
    out_real_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_imag_6_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_imag_6_ce0 : OUT STD_LOGIC;
    out_imag_6_we0 : OUT STD_LOGIC;
    out_imag_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_imag_7_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_imag_7_ce0 : OUT STD_LOGIC;
    out_imag_7_we0 : OUT STD_LOGIC;
    out_imag_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_imag_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_imag_1_ce0 : OUT STD_LOGIC;
    out_imag_1_we0 : OUT STD_LOGIC;
    out_imag_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_imag_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_imag_0_ce0 : OUT STD_LOGIC;
    out_imag_0_we0 : OUT STD_LOGIC;
    out_imag_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_real_7_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_real_7_ce0 : OUT STD_LOGIC;
    out_real_7_we0 : OUT STD_LOGIC;
    out_real_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_real_5_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_real_5_ce0 : OUT STD_LOGIC;
    out_real_5_we0 : OUT STD_LOGIC;
    out_real_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_real_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_real_1_ce0 : OUT STD_LOGIC;
    out_real_1_we0 : OUT STD_LOGIC;
    out_real_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_real_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_real_0_ce0 : OUT STD_LOGIC;
    out_real_0_we0 : OUT STD_LOGIC;
    out_real_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o1_out_real_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_out_real_V_ce0 : OUT STD_LOGIC;
    o1_out_real_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o1_out_real_V_4_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_out_real_V_4_ce0 : OUT STD_LOGIC;
    o1_out_real_V_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o1_out_imag_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_out_imag_V_ce0 : OUT STD_LOGIC;
    o1_out_imag_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o1_out_imag_V_4_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_out_imag_V_4_ce0 : OUT STD_LOGIC;
    o1_out_imag_V_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o2_out_real_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_out_real_V_ce0 : OUT STD_LOGIC;
    o2_out_real_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o2_out_real_V_4_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_out_real_V_4_ce0 : OUT STD_LOGIC;
    o2_out_real_V_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o2_out_imag_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_out_imag_V_ce0 : OUT STD_LOGIC;
    o2_out_imag_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o2_out_imag_V_4_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_out_imag_V_4_ce0 : OUT STD_LOGIC;
    o2_out_imag_V_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_real_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_real_V_ce0 : OUT STD_LOGIC;
    e_out_real_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_real_V_8_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_real_V_8_ce0 : OUT STD_LOGIC;
    e_out_real_V_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_imag_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_imag_V_ce0 : OUT STD_LOGIC;
    e_out_imag_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_imag_V_8_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_imag_V_8_ce0 : OUT STD_LOGIC;
    e_out_imag_V_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_2426_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_2426_p_din1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    grp_fu_2426_p_dout0 : IN STD_LOGIC_VECTOR (47 downto 0);
    grp_fu_2426_p_ce : OUT STD_LOGIC;
    grp_fu_2430_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_2430_p_din1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    grp_fu_2430_p_dout0 : IN STD_LOGIC_VECTOR (47 downto 0);
    grp_fu_2430_p_ce : OUT STD_LOGIC;
    grp_fu_2434_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_2434_p_din1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    grp_fu_2434_p_dout0 : IN STD_LOGIC_VECTOR (47 downto 0);
    grp_fu_2434_p_ce : OUT STD_LOGIC;
    grp_fu_2438_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_2438_p_din1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    grp_fu_2438_p_dout0 : IN STD_LOGIC_VECTOR (47 downto 0);
    grp_fu_2438_p_ce : OUT STD_LOGIC;
    grp_fu_2442_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_2442_p_din1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    grp_fu_2442_p_dout0 : IN STD_LOGIC_VECTOR (47 downto 0);
    grp_fu_2442_p_ce : OUT STD_LOGIC;
    grp_fu_2446_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_2446_p_din1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    grp_fu_2446_p_dout0 : IN STD_LOGIC_VECTOR (47 downto 0);
    grp_fu_2446_p_ce : OUT STD_LOGIC;
    grp_fu_2450_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_2450_p_din1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    grp_fu_2450_p_dout0 : IN STD_LOGIC_VECTOR (47 downto 0);
    grp_fu_2450_p_ce : OUT STD_LOGIC;
    grp_fu_2454_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_2454_p_din1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    grp_fu_2454_p_dout0 : IN STD_LOGIC_VECTOR (47 downto 0);
    grp_fu_2454_p_ce : OUT STD_LOGIC );
end;


architecture behav of sr_fft_fft_32pt_Pipeline_VITIS_LOOP_231_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal icmp_ln231_reg_939 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage3 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal TWIDDLE_REAL_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal TWIDDLE_REAL_V_ce0 : STD_LOGIC;
    signal TWIDDLE_REAL_V_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal TWIDDLE_IMAG_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal TWIDDLE_IMAG_V_ce0 : STD_LOGIC;
    signal TWIDDLE_IMAG_V_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal reg_572 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal reg_576 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln231_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal empty_53_fu_632_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_53_reg_953 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln236_fu_638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_reg_958 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_reg_958_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_reg_1006 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1006_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal b_real_V_fu_668_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_real_V_reg_1048 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_imag_V_fu_677_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_imag_V_reg_1053 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_real_V_4_fu_686_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_real_V_4_reg_1058 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_imag_V_7_fu_695_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_imag_V_7_reg_1063 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1273_fu_704_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_reg_1068 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_8_fu_707_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_8_reg_1074 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_9_fu_711_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_9_reg_1080 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_10_fu_714_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_10_reg_1086 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln813_reg_1092 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal mul_ln1348_reg_1097 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_real_V_13_reg_1102 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln813_4_reg_1108 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1347_reg_1113 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_11_fu_752_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_11_reg_1118 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_12_fu_755_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_12_reg_1124 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_13_fu_759_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_13_reg_1130 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_14_fu_762_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_14_reg_1136 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_imag_V_19_reg_1182 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln813_5_reg_1188 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1348_2_reg_1193 : STD_LOGIC_VECTOR (47 downto 0);
    signal a_real_V_7_fu_800_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_real_V_7_reg_1198 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_imag_V_4_fu_809_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_imag_V_4_reg_1204 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_real_V_9_fu_818_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_real_V_9_reg_1210 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_imag_V_6_fu_827_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_imag_V_6_reg_1216 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln813_6_reg_1222 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1347_2_reg_1227 : STD_LOGIC_VECTOR (47 downto 0);
    signal b_real_V_6_fu_850_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_real_V_6_reg_1232 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_real_V_12_fu_855_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_real_V_12_reg_1238 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_imag_V_9_fu_874_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_imag_V_9_reg_1244 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_imag_V_5_fu_879_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_imag_V_5_reg_1250 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln79_fu_614_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln79_2_fu_663_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal k_fu_110 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln231_fu_594_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_k_2 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_real_V_fu_884_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_imag_V_14_fu_890_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_real_V_11_fu_896_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_imag_V_17_fu_902_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_imag_V_fu_908_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_real_V_10_fu_914_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_imag_V_15_fu_920_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_real_V_12_fu_926_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_52_fu_608_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_51_fu_604_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl4_fu_624_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln79_1_fu_620_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln231_fu_600_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ret_V_fu_738_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal ret_V_4_fu_778_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal ret_V_5_fu_836_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_real_V_14_fu_840_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_6_fu_860_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_imag_V_20_fu_864_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sr_fft_mux_21_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sr_fft_mul_32s_18s_48_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component sr_fft_fft_16pt_Pipeline_VITIS_LOOP_131_2_TWIDDLE_REAL_V_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component sr_fft_fft_16pt_Pipeline_VITIS_LOOP_131_2_TWIDDLE_IMAG_V_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component sr_fft_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    TWIDDLE_REAL_V_U : component sr_fft_fft_16pt_Pipeline_VITIS_LOOP_131_2_TWIDDLE_REAL_V_ROM_AUTO_1R
    generic map (
        DataWidth => 18,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => TWIDDLE_REAL_V_address0,
        ce0 => TWIDDLE_REAL_V_ce0,
        q0 => TWIDDLE_REAL_V_q0);

    TWIDDLE_IMAG_V_U : component sr_fft_fft_16pt_Pipeline_VITIS_LOOP_131_2_TWIDDLE_IMAG_V_ROM_AUTO_1R
    generic map (
        DataWidth => 18,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => TWIDDLE_IMAG_V_address0,
        ce0 => TWIDDLE_IMAG_V_ce0,
        q0 => TWIDDLE_IMAG_V_q0);

    mux_21_32_1_1_U371 : component sr_fft_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => o1_out_real_V_q0,
        din1 => o1_out_real_V_4_q0,
        din2 => tmp_reg_1006,
        dout => b_real_V_fu_668_p4);

    mux_21_32_1_1_U372 : component sr_fft_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => o1_out_imag_V_q0,
        din1 => o1_out_imag_V_4_q0,
        din2 => tmp_reg_1006,
        dout => b_imag_V_fu_677_p4);

    mux_21_32_1_1_U373 : component sr_fft_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => o2_out_real_V_q0,
        din1 => o2_out_real_V_4_q0,
        din2 => tmp_reg_1006,
        dout => b_real_V_4_fu_686_p4);

    mux_21_32_1_1_U374 : component sr_fft_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => o2_out_imag_V_q0,
        din1 => o2_out_imag_V_4_q0,
        din2 => tmp_reg_1006,
        dout => b_imag_V_7_fu_695_p4);

    mux_21_32_1_1_U383 : component sr_fft_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => e_out_real_V_q0,
        din1 => e_out_real_V_8_q0,
        din2 => tmp_reg_1006_pp0_iter1_reg,
        dout => a_real_V_7_fu_800_p4);

    mux_21_32_1_1_U384 : component sr_fft_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => e_out_imag_V_q0,
        din1 => e_out_imag_V_8_q0,
        din2 => tmp_reg_1006_pp0_iter1_reg,
        dout => a_imag_V_4_fu_809_p4);

    mux_21_32_1_1_U385 : component sr_fft_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => e_out_real_V_9_q0,
        din1 => e_out_real_V_10_q0,
        din2 => tmp_reg_1006_pp0_iter1_reg,
        dout => a_real_V_9_fu_818_p4);

    mux_21_32_1_1_U386 : component sr_fft_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => e_out_imag_V_9_q0,
        din1 => e_out_imag_V_10_q0,
        din2 => tmp_reg_1006_pp0_iter1_reg,
        dout => a_imag_V_6_fu_827_p4);

    flow_control_loop_pipe_sequential_init_U : component sr_fft_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage3,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage3)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    k_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln231_fu_588_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    k_fu_110 <= add_ln231_fu_594_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    k_fu_110 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                a_imag_V_4_reg_1204 <= a_imag_V_4_fu_809_p4;
                a_imag_V_6_reg_1216 <= a_imag_V_6_fu_827_p4;
                a_real_V_7_reg_1198 <= a_real_V_7_fu_800_p4;
                a_real_V_9_reg_1210 <= a_real_V_9_fu_818_p4;
                mul_ln1348_2_reg_1193 <= grp_fu_2446_p_dout0;
                mul_ln813_5_reg_1188 <= grp_fu_2442_p_dout0;
                r_imag_V_19_reg_1182 <= ret_V_4_fu_778_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                a_imag_V_5_reg_1250 <= a_imag_V_5_fu_879_p2;
                b_imag_V_9_reg_1244 <= b_imag_V_9_fu_874_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                a_real_V_12_reg_1238 <= a_real_V_12_fu_855_p2;
                b_real_V_6_reg_1232 <= b_real_V_6_fu_850_p2;
                mul_ln1347_2_reg_1227 <= grp_fu_2454_p_dout0;
                mul_ln813_6_reg_1222 <= grp_fu_2450_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln231_reg_939 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                b_imag_V_7_reg_1063 <= b_imag_V_7_fu_695_p4;
                b_imag_V_reg_1053 <= b_imag_V_fu_677_p4;
                b_real_V_4_reg_1058 <= b_real_V_4_fu_686_p4;
                b_real_V_reg_1048 <= b_real_V_fu_668_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln231_fu_588_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    empty_53_reg_953(5 downto 1) <= empty_53_fu_632_p2(5 downto 1);
                tmp_reg_1006 <= ap_sig_allocacmp_k_2(2 downto 2);
                    zext_ln236_reg_958(1 downto 0) <= zext_ln236_fu_638_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln231_reg_939 <= icmp_ln231_fu_588_p2;
                mul_ln1347_reg_1113 <= grp_fu_2438_p_dout0;
                mul_ln813_4_reg_1108 <= grp_fu_2434_p_dout0;
                r_real_V_13_reg_1102 <= ret_V_fu_738_p2(47 downto 16);
                sext_ln1273_11_reg_1118 <= sext_ln1273_11_fu_752_p1;
                sext_ln1273_12_reg_1124 <= sext_ln1273_12_fu_755_p1;
                sext_ln1273_13_reg_1130 <= sext_ln1273_13_fu_759_p1;
                sext_ln1273_14_reg_1136 <= sext_ln1273_14_fu_762_p1;
                tmp_reg_1006_pp0_iter1_reg <= tmp_reg_1006;
                    zext_ln236_reg_958_pp0_iter1_reg(1 downto 0) <= zext_ln236_reg_958(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln231_reg_939 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_ln1348_reg_1097 <= grp_fu_2430_p_dout0;
                mul_ln813_reg_1092 <= grp_fu_2426_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln231_reg_939 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln231_reg_939 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_572 <= TWIDDLE_REAL_V_q0;
                reg_576 <= TWIDDLE_IMAG_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln231_reg_939 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                sext_ln1273_10_reg_1086 <= sext_ln1273_10_fu_714_p1;
                sext_ln1273_8_reg_1074 <= sext_ln1273_8_fu_707_p1;
                sext_ln1273_9_reg_1080 <= sext_ln1273_9_fu_711_p1;
                sext_ln1273_reg_1068 <= sext_ln1273_fu_704_p1;
            end if;
        end if;
    end process;
    empty_53_reg_953(0) <= '0';
    zext_ln236_reg_958(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    zext_ln236_reg_958_pp0_iter1_reg(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter1_stage0, ap_idle_pp0_0to0, ap_idle_pp0_1to2, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    TWIDDLE_IMAG_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, zext_ln79_fu_614_p1, ap_block_pp0_stage0, zext_ln79_2_fu_663_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                TWIDDLE_IMAG_V_address0 <= zext_ln79_2_fu_663_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                TWIDDLE_IMAG_V_address0 <= zext_ln79_fu_614_p1(6 - 1 downto 0);
            else 
                TWIDDLE_IMAG_V_address0 <= "XXXXXX";
            end if;
        else 
            TWIDDLE_IMAG_V_address0 <= "XXXXXX";
        end if; 
    end process;


    TWIDDLE_IMAG_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            TWIDDLE_IMAG_V_ce0 <= ap_const_logic_1;
        else 
            TWIDDLE_IMAG_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    TWIDDLE_REAL_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, zext_ln79_fu_614_p1, ap_block_pp0_stage0, zext_ln79_2_fu_663_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                TWIDDLE_REAL_V_address0 <= zext_ln79_2_fu_663_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                TWIDDLE_REAL_V_address0 <= zext_ln79_fu_614_p1(6 - 1 downto 0);
            else 
                TWIDDLE_REAL_V_address0 <= "XXXXXX";
            end if;
        else 
            TWIDDLE_REAL_V_address0 <= "XXXXXX";
        end if; 
    end process;


    TWIDDLE_REAL_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            TWIDDLE_REAL_V_ce0 <= ap_const_logic_1;
        else 
            TWIDDLE_REAL_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    a_imag_V_5_fu_879_p2 <= std_logic_vector(unsigned(r_imag_V_19_reg_1182) - unsigned(r_imag_V_20_fu_864_p4));
    a_real_V_12_fu_855_p2 <= std_logic_vector(unsigned(r_real_V_13_reg_1102) - unsigned(r_real_V_14_fu_840_p4));
    add_ln231_fu_594_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_k_2) + unsigned(ap_const_lv4_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, icmp_ln231_reg_939)
    begin
        if (((icmp_ln231_reg_939 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln231_reg_939, ap_block_pp0_stage0_subdone)
    begin
        if (((icmp_ln231_reg_939 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage3;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_k_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, k_fu_110, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_k_2 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_k_2 <= k_fu_110;
        end if; 
    end process;

    b_imag_V_9_fu_874_p2 <= std_logic_vector(unsigned(r_imag_V_20_fu_864_p4) + unsigned(r_imag_V_19_reg_1182));
    b_real_V_6_fu_850_p2 <= std_logic_vector(unsigned(r_real_V_14_fu_840_p4) + unsigned(r_real_V_13_reg_1102));
    e_out_imag_V_10_address0 <= zext_ln236_reg_958(2 - 1 downto 0);

    e_out_imag_V_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_imag_V_10_ce0 <= ap_const_logic_1;
        else 
            e_out_imag_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_imag_V_8_address0 <= zext_ln236_reg_958(2 - 1 downto 0);

    e_out_imag_V_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_imag_V_8_ce0 <= ap_const_logic_1;
        else 
            e_out_imag_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_imag_V_9_address0 <= zext_ln236_reg_958(2 - 1 downto 0);

    e_out_imag_V_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_imag_V_9_ce0 <= ap_const_logic_1;
        else 
            e_out_imag_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_imag_V_address0 <= zext_ln236_reg_958(2 - 1 downto 0);

    e_out_imag_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_imag_V_ce0 <= ap_const_logic_1;
        else 
            e_out_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_real_V_10_address0 <= zext_ln236_reg_958(2 - 1 downto 0);

    e_out_real_V_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_real_V_10_ce0 <= ap_const_logic_1;
        else 
            e_out_real_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_real_V_8_address0 <= zext_ln236_reg_958(2 - 1 downto 0);

    e_out_real_V_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_real_V_8_ce0 <= ap_const_logic_1;
        else 
            e_out_real_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_real_V_9_address0 <= zext_ln236_reg_958(2 - 1 downto 0);

    e_out_real_V_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_real_V_9_ce0 <= ap_const_logic_1;
        else 
            e_out_real_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_real_V_address0 <= zext_ln236_reg_958(2 - 1 downto 0);

    e_out_real_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_real_V_ce0 <= ap_const_logic_1;
        else 
            e_out_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_51_fu_604_p1 <= ap_sig_allocacmp_k_2(3 - 1 downto 0);
    empty_52_fu_608_p2 <= std_logic_vector(shift_left(unsigned(ap_sig_allocacmp_k_2),to_integer(unsigned('0' & ap_const_lv4_1(4-1 downto 0)))));
    empty_53_fu_632_p2 <= std_logic_vector(unsigned(p_shl4_fu_624_p3) - unsigned(zext_ln79_1_fu_620_p1));
    grp_fu_2426_p_ce <= ap_const_logic_1;
    grp_fu_2426_p_din0 <= sext_ln1273_fu_704_p1(32 - 1 downto 0);
    grp_fu_2426_p_din1 <= sext_ln1273_8_fu_707_p1(18 - 1 downto 0);
    grp_fu_2430_p_ce <= ap_const_logic_1;
    grp_fu_2430_p_din0 <= sext_ln1273_9_fu_711_p1(32 - 1 downto 0);
    grp_fu_2430_p_din1 <= sext_ln1273_10_fu_714_p1(18 - 1 downto 0);
    grp_fu_2434_p_ce <= ap_const_logic_1;
    grp_fu_2434_p_din0 <= sext_ln1273_reg_1068(32 - 1 downto 0);
    grp_fu_2434_p_din1 <= sext_ln1273_10_reg_1086(18 - 1 downto 0);
    grp_fu_2438_p_ce <= ap_const_logic_1;
    grp_fu_2438_p_din0 <= sext_ln1273_9_reg_1080(32 - 1 downto 0);
    grp_fu_2438_p_din1 <= sext_ln1273_8_reg_1074(18 - 1 downto 0);
    grp_fu_2442_p_ce <= ap_const_logic_1;
    grp_fu_2442_p_din0 <= sext_ln1273_11_fu_752_p1(32 - 1 downto 0);
    grp_fu_2442_p_din1 <= sext_ln1273_12_fu_755_p1(18 - 1 downto 0);
    grp_fu_2446_p_ce <= ap_const_logic_1;
    grp_fu_2446_p_din0 <= sext_ln1273_13_fu_759_p1(32 - 1 downto 0);
    grp_fu_2446_p_din1 <= sext_ln1273_14_fu_762_p1(18 - 1 downto 0);
    grp_fu_2450_p_ce <= ap_const_logic_1;
    grp_fu_2450_p_din0 <= sext_ln1273_11_reg_1118(32 - 1 downto 0);
    grp_fu_2450_p_din1 <= sext_ln1273_14_reg_1136(18 - 1 downto 0);
    grp_fu_2454_p_ce <= ap_const_logic_1;
    grp_fu_2454_p_din0 <= sext_ln1273_13_reg_1130(32 - 1 downto 0);
    grp_fu_2454_p_din1 <= sext_ln1273_12_reg_1124(18 - 1 downto 0);
    icmp_ln231_fu_588_p2 <= "1" when (ap_sig_allocacmp_k_2 = ap_const_lv4_8) else "0";
    o1_out_imag_V_4_address0 <= zext_ln236_fu_638_p1(2 - 1 downto 0);

    o1_out_imag_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o1_out_imag_V_4_ce0 <= ap_const_logic_1;
        else 
            o1_out_imag_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_out_imag_V_address0 <= zext_ln236_fu_638_p1(2 - 1 downto 0);

    o1_out_imag_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o1_out_imag_V_ce0 <= ap_const_logic_1;
        else 
            o1_out_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_out_real_V_4_address0 <= zext_ln236_fu_638_p1(2 - 1 downto 0);

    o1_out_real_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o1_out_real_V_4_ce0 <= ap_const_logic_1;
        else 
            o1_out_real_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_out_real_V_address0 <= zext_ln236_fu_638_p1(2 - 1 downto 0);

    o1_out_real_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o1_out_real_V_ce0 <= ap_const_logic_1;
        else 
            o1_out_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_out_imag_V_4_address0 <= zext_ln236_fu_638_p1(2 - 1 downto 0);

    o2_out_imag_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o2_out_imag_V_4_ce0 <= ap_const_logic_1;
        else 
            o2_out_imag_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_out_imag_V_address0 <= zext_ln236_fu_638_p1(2 - 1 downto 0);

    o2_out_imag_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o2_out_imag_V_ce0 <= ap_const_logic_1;
        else 
            o2_out_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_out_real_V_4_address0 <= zext_ln236_fu_638_p1(2 - 1 downto 0);

    o2_out_real_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o2_out_real_V_4_ce0 <= ap_const_logic_1;
        else 
            o2_out_real_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_out_real_V_address0 <= zext_ln236_fu_638_p1(2 - 1 downto 0);

    o2_out_real_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o2_out_real_V_ce0 <= ap_const_logic_1;
        else 
            o2_out_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_0_address0 <= zext_ln236_reg_958_pp0_iter1_reg(2 - 1 downto 0);

    out_imag_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_imag_0_ce0 <= ap_const_logic_1;
        else 
            out_imag_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_0_d0 <= r_imag_V_fu_908_p2;

    out_imag_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_reg_1006_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_1006_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_imag_0_we0 <= ap_const_logic_1;
        else 
            out_imag_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_1_address0 <= zext_ln236_reg_958_pp0_iter1_reg(2 - 1 downto 0);

    out_imag_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_imag_1_ce0 <= ap_const_logic_1;
        else 
            out_imag_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_1_d0 <= r_imag_V_fu_908_p2;

    out_imag_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_reg_1006_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_1006_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_imag_1_we0 <= ap_const_logic_1;
        else 
            out_imag_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_2_address0 <= zext_ln236_reg_958_pp0_iter1_reg(2 - 1 downto 0);

    out_imag_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_imag_2_ce0 <= ap_const_logic_1;
        else 
            out_imag_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_2_d0 <= r_imag_V_14_fu_890_p2;

    out_imag_2_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_reg_1006_pp0_iter1_reg, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (tmp_reg_1006_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_imag_2_we0 <= ap_const_logic_1;
        else 
            out_imag_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_3_address0 <= zext_ln236_reg_958_pp0_iter1_reg(2 - 1 downto 0);

    out_imag_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_imag_3_ce0 <= ap_const_logic_1;
        else 
            out_imag_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_3_d0 <= r_imag_V_14_fu_890_p2;

    out_imag_3_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_reg_1006_pp0_iter1_reg, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (tmp_reg_1006_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_imag_3_we0 <= ap_const_logic_1;
        else 
            out_imag_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_4_address0 <= zext_ln236_reg_958_pp0_iter1_reg(2 - 1 downto 0);

    out_imag_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_imag_4_ce0 <= ap_const_logic_1;
        else 
            out_imag_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_4_d0 <= r_imag_V_15_fu_920_p2;

    out_imag_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_reg_1006_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_1006_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_imag_4_we0 <= ap_const_logic_1;
        else 
            out_imag_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_5_address0 <= zext_ln236_reg_958_pp0_iter1_reg(2 - 1 downto 0);

    out_imag_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_imag_5_ce0 <= ap_const_logic_1;
        else 
            out_imag_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_5_d0 <= r_imag_V_15_fu_920_p2;

    out_imag_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_reg_1006_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_1006_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_imag_5_we0 <= ap_const_logic_1;
        else 
            out_imag_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_6_address0 <= zext_ln236_reg_958_pp0_iter1_reg(2 - 1 downto 0);

    out_imag_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_imag_6_ce0 <= ap_const_logic_1;
        else 
            out_imag_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_6_d0 <= r_imag_V_17_fu_902_p2;

    out_imag_6_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_reg_1006_pp0_iter1_reg, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (tmp_reg_1006_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_imag_6_we0 <= ap_const_logic_1;
        else 
            out_imag_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_7_address0 <= zext_ln236_reg_958_pp0_iter1_reg(2 - 1 downto 0);

    out_imag_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_imag_7_ce0 <= ap_const_logic_1;
        else 
            out_imag_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_7_d0 <= r_imag_V_17_fu_902_p2;

    out_imag_7_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_reg_1006_pp0_iter1_reg, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (tmp_reg_1006_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_imag_7_we0 <= ap_const_logic_1;
        else 
            out_imag_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_0_address0 <= zext_ln236_reg_958_pp0_iter1_reg(2 - 1 downto 0);

    out_real_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_real_0_ce0 <= ap_const_logic_1;
        else 
            out_real_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_0_d0 <= r_real_V_fu_884_p2;

    out_real_0_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_reg_1006_pp0_iter1_reg, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (tmp_reg_1006_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_real_0_we0 <= ap_const_logic_1;
        else 
            out_real_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_1_address0 <= zext_ln236_reg_958_pp0_iter1_reg(2 - 1 downto 0);

    out_real_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_real_1_ce0 <= ap_const_logic_1;
        else 
            out_real_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_1_d0 <= r_real_V_fu_884_p2;

    out_real_1_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_reg_1006_pp0_iter1_reg, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (tmp_reg_1006_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_real_1_we0 <= ap_const_logic_1;
        else 
            out_real_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_2_address0 <= zext_ln236_reg_958_pp0_iter1_reg(2 - 1 downto 0);

    out_real_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_real_2_ce0 <= ap_const_logic_1;
        else 
            out_real_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_2_d0 <= r_real_V_10_fu_914_p2;

    out_real_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_reg_1006_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_1006_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_real_2_we0 <= ap_const_logic_1;
        else 
            out_real_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_3_address0 <= zext_ln236_reg_958_pp0_iter1_reg(2 - 1 downto 0);

    out_real_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_real_3_ce0 <= ap_const_logic_1;
        else 
            out_real_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_3_d0 <= r_real_V_10_fu_914_p2;

    out_real_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_reg_1006_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_1006_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_real_3_we0 <= ap_const_logic_1;
        else 
            out_real_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_4_address0 <= zext_ln236_reg_958_pp0_iter1_reg(2 - 1 downto 0);

    out_real_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_real_4_ce0 <= ap_const_logic_1;
        else 
            out_real_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_4_d0 <= r_real_V_11_fu_896_p2;

    out_real_4_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_reg_1006_pp0_iter1_reg, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (tmp_reg_1006_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_real_4_we0 <= ap_const_logic_1;
        else 
            out_real_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_5_address0 <= zext_ln236_reg_958_pp0_iter1_reg(2 - 1 downto 0);

    out_real_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_real_5_ce0 <= ap_const_logic_1;
        else 
            out_real_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_5_d0 <= r_real_V_11_fu_896_p2;

    out_real_5_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_reg_1006_pp0_iter1_reg, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (tmp_reg_1006_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_real_5_we0 <= ap_const_logic_1;
        else 
            out_real_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_6_address0 <= zext_ln236_reg_958_pp0_iter1_reg(2 - 1 downto 0);

    out_real_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_real_6_ce0 <= ap_const_logic_1;
        else 
            out_real_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_6_d0 <= r_real_V_12_fu_926_p2;

    out_real_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_reg_1006_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_1006_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_real_6_we0 <= ap_const_logic_1;
        else 
            out_real_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_7_address0 <= zext_ln236_reg_958_pp0_iter1_reg(2 - 1 downto 0);

    out_real_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_real_7_ce0 <= ap_const_logic_1;
        else 
            out_real_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_7_d0 <= r_real_V_12_fu_926_p2;

    out_real_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_reg_1006_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_1006_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_real_7_we0 <= ap_const_logic_1;
        else 
            out_real_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_shl4_fu_624_p3 <= (empty_51_fu_604_p1 & ap_const_lv3_0);
    r_imag_V_14_fu_890_p2 <= std_logic_vector(unsigned(a_imag_V_6_reg_1216) - unsigned(a_real_V_12_reg_1238));
    r_imag_V_15_fu_920_p2 <= std_logic_vector(unsigned(a_imag_V_4_reg_1204) - unsigned(b_imag_V_9_reg_1244));
    r_imag_V_17_fu_902_p2 <= std_logic_vector(unsigned(a_imag_V_6_reg_1216) + unsigned(a_real_V_12_reg_1238));
    r_imag_V_20_fu_864_p4 <= ret_V_6_fu_860_p2(47 downto 16);
    r_imag_V_fu_908_p2 <= std_logic_vector(unsigned(a_imag_V_4_reg_1204) + unsigned(b_imag_V_9_reg_1244));
    r_real_V_10_fu_914_p2 <= std_logic_vector(unsigned(a_real_V_9_reg_1210) + unsigned(a_imag_V_5_reg_1250));
    r_real_V_11_fu_896_p2 <= std_logic_vector(unsigned(a_real_V_7_reg_1198) - unsigned(b_real_V_6_reg_1232));
    r_real_V_12_fu_926_p2 <= std_logic_vector(unsigned(a_real_V_9_reg_1210) - unsigned(a_imag_V_5_reg_1250));
    r_real_V_14_fu_840_p4 <= ret_V_5_fu_836_p2(47 downto 16);
    r_real_V_fu_884_p2 <= std_logic_vector(unsigned(b_real_V_6_reg_1232) + unsigned(a_real_V_7_reg_1198));
    ret_V_4_fu_778_p2 <= std_logic_vector(unsigned(mul_ln1347_reg_1113) + unsigned(mul_ln813_4_reg_1108));
    ret_V_5_fu_836_p2 <= std_logic_vector(unsigned(mul_ln813_5_reg_1188) - unsigned(mul_ln1348_2_reg_1193));
    ret_V_6_fu_860_p2 <= std_logic_vector(unsigned(mul_ln1347_2_reg_1227) + unsigned(mul_ln813_6_reg_1222));
    ret_V_fu_738_p2 <= std_logic_vector(unsigned(mul_ln813_reg_1092) - unsigned(mul_ln1348_reg_1097));
        sext_ln1273_10_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_576),48));

        sext_ln1273_11_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_real_V_4_reg_1058),48));

        sext_ln1273_12_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_572),48));

        sext_ln1273_13_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_imag_V_7_reg_1063),48));

        sext_ln1273_14_fu_762_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_576),48));

        sext_ln1273_8_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_572),48));

        sext_ln1273_9_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_imag_V_reg_1053),48));

        sext_ln1273_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_real_V_reg_1048),48));

    trunc_ln231_fu_600_p1 <= ap_sig_allocacmp_k_2(2 - 1 downto 0);
    zext_ln236_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln231_fu_600_p1),64));
    zext_ln79_1_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_52_fu_608_p2),6));
    zext_ln79_2_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_53_reg_953),64));
    zext_ln79_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_52_fu_608_p2),64));
end behav;
