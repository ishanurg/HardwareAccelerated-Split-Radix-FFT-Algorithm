// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sr_fft_fft_16pt_Pipeline_VITIS_LOOP_171_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_real_3_load_9,
        o2_in_real_V_8,
        in_real_1_load_9,
        in_real_0_load_9,
        in_imag_0_load_9,
        in_imag_1_load_9,
        o2_in_imag_V_8,
        in_imag_3_load_9,
        in_real_0_load_8,
        in_real_1_load_8,
        in_real_2_load_8,
        in_real_3_load_8,
        in_imag_0_load_8,
        in_imag_1_load_8,
        in_imag_2_load_8,
        in_imag_3_load_8,
        o2_in_real_V_7_out,
        o2_in_real_V_7_out_ap_vld,
        o2_in_real_V_6_out,
        o2_in_real_V_6_out_ap_vld,
        o2_in_real_V_5_out,
        o2_in_real_V_5_out_ap_vld,
        o2_in_real_V_out,
        o2_in_real_V_out_ap_vld,
        o2_in_imag_V_7_out,
        o2_in_imag_V_7_out_ap_vld,
        o2_in_imag_V_6_out,
        o2_in_imag_V_6_out_ap_vld,
        o2_in_imag_V_5_out,
        o2_in_imag_V_5_out_ap_vld,
        o2_in_imag_V_out,
        o2_in_imag_V_out_ap_vld,
        o1_in_imag_V_7_out,
        o1_in_imag_V_7_out_ap_vld,
        o1_in_imag_V_6_out,
        o1_in_imag_V_6_out_ap_vld,
        o1_in_imag_V_5_out,
        o1_in_imag_V_5_out_ap_vld,
        o1_in_imag_V_out,
        o1_in_imag_V_out_ap_vld,
        o1_in_real_V_7_out,
        o1_in_real_V_7_out_ap_vld,
        o1_in_real_V_6_out,
        o1_in_real_V_6_out_ap_vld,
        o1_in_real_V_5_out,
        o1_in_real_V_5_out_ap_vld,
        o1_in_real_V_out,
        o1_in_real_V_out_ap_vld
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_real_3_load_9;
input  [31:0] o2_in_real_V_8;
input  [31:0] in_real_1_load_9;
input  [31:0] in_real_0_load_9;
input  [31:0] in_imag_0_load_9;
input  [31:0] in_imag_1_load_9;
input  [31:0] o2_in_imag_V_8;
input  [31:0] in_imag_3_load_9;
input  [31:0] in_real_0_load_8;
input  [31:0] in_real_1_load_8;
input  [31:0] in_real_2_load_8;
input  [31:0] in_real_3_load_8;
input  [31:0] in_imag_0_load_8;
input  [31:0] in_imag_1_load_8;
input  [31:0] in_imag_2_load_8;
input  [31:0] in_imag_3_load_8;
output  [31:0] o2_in_real_V_7_out;
output   o2_in_real_V_7_out_ap_vld;
output  [31:0] o2_in_real_V_6_out;
output   o2_in_real_V_6_out_ap_vld;
output  [31:0] o2_in_real_V_5_out;
output   o2_in_real_V_5_out_ap_vld;
output  [31:0] o2_in_real_V_out;
output   o2_in_real_V_out_ap_vld;
output  [31:0] o2_in_imag_V_7_out;
output   o2_in_imag_V_7_out_ap_vld;
output  [31:0] o2_in_imag_V_6_out;
output   o2_in_imag_V_6_out_ap_vld;
output  [31:0] o2_in_imag_V_5_out;
output   o2_in_imag_V_5_out_ap_vld;
output  [31:0] o2_in_imag_V_out;
output   o2_in_imag_V_out_ap_vld;
output  [31:0] o1_in_imag_V_7_out;
output   o1_in_imag_V_7_out_ap_vld;
output  [31:0] o1_in_imag_V_6_out;
output   o1_in_imag_V_6_out_ap_vld;
output  [31:0] o1_in_imag_V_5_out;
output   o1_in_imag_V_5_out_ap_vld;
output  [31:0] o1_in_imag_V_out;
output   o1_in_imag_V_out_ap_vld;
output  [31:0] o1_in_real_V_7_out;
output   o1_in_real_V_7_out_ap_vld;
output  [31:0] o1_in_real_V_6_out;
output   o1_in_real_V_6_out_ap_vld;
output  [31:0] o1_in_real_V_5_out;
output   o1_in_real_V_5_out_ap_vld;
output  [31:0] o1_in_real_V_out;
output   o1_in_real_V_out_ap_vld;

reg ap_idle;
reg o2_in_real_V_7_out_ap_vld;
reg o2_in_real_V_6_out_ap_vld;
reg o2_in_real_V_5_out_ap_vld;
reg o2_in_real_V_out_ap_vld;
reg o2_in_imag_V_7_out_ap_vld;
reg o2_in_imag_V_6_out_ap_vld;
reg o2_in_imag_V_5_out_ap_vld;
reg o2_in_imag_V_out_ap_vld;
reg o1_in_imag_V_7_out_ap_vld;
reg o1_in_imag_V_6_out_ap_vld;
reg o1_in_imag_V_5_out_ap_vld;
reg o1_in_imag_V_out_ap_vld;
reg o1_in_real_V_7_out_ap_vld;
reg o1_in_real_V_6_out_ap_vld;
reg o1_in_real_V_5_out_ap_vld;
reg o1_in_real_V_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln171_fu_382_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [2:0] i_fu_98;
wire   [2:0] add_ln171_fu_388_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_i_6;
reg   [31:0] o1_in_real_V_fu_102;
wire   [31:0] o1_in_real_V_8_fu_398_p6;
wire   [1:0] trunc_ln173_fu_394_p1;
reg   [31:0] o1_in_real_V_5_fu_106;
reg   [31:0] o1_in_real_V_6_fu_110;
reg   [31:0] o1_in_real_V_7_fu_114;
reg   [31:0] o1_in_imag_V_fu_118;
wire   [31:0] o1_in_imag_V_8_fu_412_p6;
reg   [31:0] o1_in_imag_V_5_fu_122;
reg   [31:0] o1_in_imag_V_6_fu_126;
reg   [31:0] o1_in_imag_V_7_fu_130;
reg   [31:0] o2_in_imag_V_fu_134;
reg   [31:0] o2_in_imag_V_5_fu_138;
reg   [31:0] o2_in_imag_V_6_fu_142;
reg   [31:0] o2_in_imag_V_7_fu_146;
reg   [31:0] o2_in_real_V_fu_150;
reg   [31:0] o2_in_real_V_5_fu_154;
reg   [31:0] o2_in_real_V_6_fu_158;
reg   [31:0] o2_in_real_V_7_fu_162;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
end

sr_fft_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U149(
    .din0(in_real_0_load_8),
    .din1(in_real_1_load_8),
    .din2(in_real_2_load_8),
    .din3(in_real_3_load_8),
    .din4(trunc_ln173_fu_394_p1),
    .dout(o1_in_real_V_8_fu_398_p6)
);

sr_fft_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U150(
    .din0(in_imag_0_load_8),
    .din1(in_imag_1_load_8),
    .din2(in_imag_2_load_8),
    .din3(in_imag_3_load_8),
    .din4(trunc_ln173_fu_394_p1),
    .dout(o1_in_imag_V_8_fu_412_p6)
);

sr_fft_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln171_fu_382_p2 == 1'd0)) begin
            i_fu_98 <= add_ln171_fu_388_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_98 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln173_fu_394_p1 == 2'd1) & (icmp_ln171_fu_382_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o1_in_imag_V_5_fu_122 <= o1_in_imag_V_8_fu_412_p6;
        o1_in_real_V_5_fu_106 <= o1_in_real_V_8_fu_398_p6;
        o2_in_imag_V_6_fu_142 <= in_imag_1_load_9;
        o2_in_real_V_6_fu_158 <= in_real_1_load_9;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln173_fu_394_p1 == 2'd2) & (icmp_ln171_fu_382_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o1_in_imag_V_6_fu_126 <= o1_in_imag_V_8_fu_412_p6;
        o1_in_real_V_6_fu_110 <= o1_in_real_V_8_fu_398_p6;
        o2_in_imag_V_5_fu_138 <= o2_in_imag_V_8;
        o2_in_real_V_5_fu_154 <= o2_in_real_V_8;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln173_fu_394_p1 == 2'd3) & (icmp_ln171_fu_382_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o1_in_imag_V_7_fu_130 <= o1_in_imag_V_8_fu_412_p6;
        o1_in_real_V_7_fu_114 <= o1_in_real_V_8_fu_398_p6;
        o2_in_imag_V_fu_134 <= in_imag_3_load_9;
        o2_in_real_V_fu_150 <= in_real_3_load_9;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln173_fu_394_p1 == 2'd0) & (icmp_ln171_fu_382_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o1_in_imag_V_fu_118 <= o1_in_imag_V_8_fu_412_p6;
        o1_in_real_V_fu_102 <= o1_in_real_V_8_fu_398_p6;
        o2_in_imag_V_7_fu_146 <= in_imag_0_load_9;
        o2_in_real_V_7_fu_162 <= in_real_0_load_9;
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_382_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i_6 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_6 = i_fu_98;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_382_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o1_in_imag_V_5_out_ap_vld = 1'b1;
    end else begin
        o1_in_imag_V_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_382_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o1_in_imag_V_6_out_ap_vld = 1'b1;
    end else begin
        o1_in_imag_V_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_382_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o1_in_imag_V_7_out_ap_vld = 1'b1;
    end else begin
        o1_in_imag_V_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_382_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o1_in_imag_V_out_ap_vld = 1'b1;
    end else begin
        o1_in_imag_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_382_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o1_in_real_V_5_out_ap_vld = 1'b1;
    end else begin
        o1_in_real_V_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_382_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o1_in_real_V_6_out_ap_vld = 1'b1;
    end else begin
        o1_in_real_V_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_382_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o1_in_real_V_7_out_ap_vld = 1'b1;
    end else begin
        o1_in_real_V_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_382_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o1_in_real_V_out_ap_vld = 1'b1;
    end else begin
        o1_in_real_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_382_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o2_in_imag_V_5_out_ap_vld = 1'b1;
    end else begin
        o2_in_imag_V_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_382_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o2_in_imag_V_6_out_ap_vld = 1'b1;
    end else begin
        o2_in_imag_V_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_382_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o2_in_imag_V_7_out_ap_vld = 1'b1;
    end else begin
        o2_in_imag_V_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_382_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o2_in_imag_V_out_ap_vld = 1'b1;
    end else begin
        o2_in_imag_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_382_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o2_in_real_V_5_out_ap_vld = 1'b1;
    end else begin
        o2_in_real_V_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_382_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o2_in_real_V_6_out_ap_vld = 1'b1;
    end else begin
        o2_in_real_V_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_382_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o2_in_real_V_7_out_ap_vld = 1'b1;
    end else begin
        o2_in_real_V_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_382_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        o2_in_real_V_out_ap_vld = 1'b1;
    end else begin
        o2_in_real_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln171_fu_388_p2 = (ap_sig_allocacmp_i_6 + 3'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln171_fu_382_p2 = ((ap_sig_allocacmp_i_6 == 3'd4) ? 1'b1 : 1'b0);

assign o1_in_imag_V_5_out = o1_in_imag_V_5_fu_122;

assign o1_in_imag_V_6_out = o1_in_imag_V_6_fu_126;

assign o1_in_imag_V_7_out = o1_in_imag_V_7_fu_130;

assign o1_in_imag_V_out = o1_in_imag_V_fu_118;

assign o1_in_real_V_5_out = o1_in_real_V_5_fu_106;

assign o1_in_real_V_6_out = o1_in_real_V_6_fu_110;

assign o1_in_real_V_7_out = o1_in_real_V_7_fu_114;

assign o1_in_real_V_out = o1_in_real_V_fu_102;

assign o2_in_imag_V_5_out = o2_in_imag_V_5_fu_138;

assign o2_in_imag_V_6_out = o2_in_imag_V_6_fu_142;

assign o2_in_imag_V_7_out = o2_in_imag_V_7_fu_146;

assign o2_in_imag_V_out = o2_in_imag_V_fu_134;

assign o2_in_real_V_5_out = o2_in_real_V_5_fu_154;

assign o2_in_real_V_6_out = o2_in_real_V_6_fu_158;

assign o2_in_real_V_7_out = o2_in_real_V_7_fu_162;

assign o2_in_real_V_out = o2_in_real_V_fu_150;

assign trunc_ln173_fu_394_p1 = ap_sig_allocacmp_i_6[1:0];

endmodule //sr_fft_fft_16pt_Pipeline_VITIS_LOOP_171_2
