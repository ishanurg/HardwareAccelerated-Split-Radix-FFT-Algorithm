-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sr_fft_fft_64pt_Pipeline_VITIS_LOOP_271_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    o2_in_real_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_in_real_V_ce0 : OUT STD_LOGIC;
    o2_in_real_V_we0 : OUT STD_LOGIC;
    o2_in_real_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o2_in_imag_V_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_in_imag_V_3_ce0 : OUT STD_LOGIC;
    o2_in_imag_V_3_we0 : OUT STD_LOGIC;
    o2_in_imag_V_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o2_in_imag_V_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_in_imag_V_2_ce0 : OUT STD_LOGIC;
    o2_in_imag_V_2_we0 : OUT STD_LOGIC;
    o2_in_imag_V_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o2_in_imag_V_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_in_imag_V_1_ce0 : OUT STD_LOGIC;
    o2_in_imag_V_1_we0 : OUT STD_LOGIC;
    o2_in_imag_V_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o2_in_imag_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_in_imag_V_ce0 : OUT STD_LOGIC;
    o2_in_imag_V_we0 : OUT STD_LOGIC;
    o2_in_imag_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o2_in_real_V_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_in_real_V_3_ce0 : OUT STD_LOGIC;
    o2_in_real_V_3_we0 : OUT STD_LOGIC;
    o2_in_real_V_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o2_in_real_V_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_in_real_V_2_ce0 : OUT STD_LOGIC;
    o2_in_real_V_2_we0 : OUT STD_LOGIC;
    o2_in_real_V_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o2_in_real_V_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_in_real_V_1_ce0 : OUT STD_LOGIC;
    o2_in_real_V_1_we0 : OUT STD_LOGIC;
    o2_in_real_V_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o1_in_imag_V_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_in_imag_V_3_ce0 : OUT STD_LOGIC;
    o1_in_imag_V_3_we0 : OUT STD_LOGIC;
    o1_in_imag_V_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o1_in_imag_V_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_in_imag_V_2_ce0 : OUT STD_LOGIC;
    o1_in_imag_V_2_we0 : OUT STD_LOGIC;
    o1_in_imag_V_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o1_in_imag_V_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_in_imag_V_1_ce0 : OUT STD_LOGIC;
    o1_in_imag_V_1_we0 : OUT STD_LOGIC;
    o1_in_imag_V_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o1_in_imag_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_in_imag_V_ce0 : OUT STD_LOGIC;
    o1_in_imag_V_we0 : OUT STD_LOGIC;
    o1_in_imag_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o1_in_real_V_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_in_real_V_3_ce0 : OUT STD_LOGIC;
    o1_in_real_V_3_we0 : OUT STD_LOGIC;
    o1_in_real_V_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o1_in_real_V_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_in_real_V_2_ce0 : OUT STD_LOGIC;
    o1_in_real_V_2_we0 : OUT STD_LOGIC;
    o1_in_real_V_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o1_in_real_V_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_in_real_V_1_ce0 : OUT STD_LOGIC;
    o1_in_real_V_1_we0 : OUT STD_LOGIC;
    o1_in_real_V_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o1_in_real_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_in_real_V_ce0 : OUT STD_LOGIC;
    o1_in_real_V_we0 : OUT STD_LOGIC;
    o1_in_real_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_real_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_real_0_ce0 : OUT STD_LOGIC;
    in_real_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_real_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_real_0_ce1 : OUT STD_LOGIC;
    in_real_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_real_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_real_1_ce0 : OUT STD_LOGIC;
    in_real_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_real_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_real_1_ce1 : OUT STD_LOGIC;
    in_real_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_real_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_real_2_ce0 : OUT STD_LOGIC;
    in_real_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_real_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_real_2_ce1 : OUT STD_LOGIC;
    in_real_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_real_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_real_3_ce0 : OUT STD_LOGIC;
    in_real_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_real_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_real_3_ce1 : OUT STD_LOGIC;
    in_real_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_real_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_real_4_ce0 : OUT STD_LOGIC;
    in_real_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_real_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_real_4_ce1 : OUT STD_LOGIC;
    in_real_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_real_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_real_5_ce0 : OUT STD_LOGIC;
    in_real_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_real_5_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_real_5_ce1 : OUT STD_LOGIC;
    in_real_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_real_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_real_6_ce0 : OUT STD_LOGIC;
    in_real_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_real_6_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_real_6_ce1 : OUT STD_LOGIC;
    in_real_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_real_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_real_7_ce0 : OUT STD_LOGIC;
    in_real_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_real_7_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_real_7_ce1 : OUT STD_LOGIC;
    in_real_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_imag_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_imag_0_ce0 : OUT STD_LOGIC;
    in_imag_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_imag_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_imag_0_ce1 : OUT STD_LOGIC;
    in_imag_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_imag_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_imag_1_ce0 : OUT STD_LOGIC;
    in_imag_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_imag_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_imag_1_ce1 : OUT STD_LOGIC;
    in_imag_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_imag_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_imag_2_ce0 : OUT STD_LOGIC;
    in_imag_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_imag_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_imag_2_ce1 : OUT STD_LOGIC;
    in_imag_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_imag_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_imag_3_ce0 : OUT STD_LOGIC;
    in_imag_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_imag_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_imag_3_ce1 : OUT STD_LOGIC;
    in_imag_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_imag_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_imag_4_ce0 : OUT STD_LOGIC;
    in_imag_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_imag_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_imag_4_ce1 : OUT STD_LOGIC;
    in_imag_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_imag_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_imag_5_ce0 : OUT STD_LOGIC;
    in_imag_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_imag_5_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_imag_5_ce1 : OUT STD_LOGIC;
    in_imag_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_imag_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_imag_6_ce0 : OUT STD_LOGIC;
    in_imag_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_imag_6_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_imag_6_ce1 : OUT STD_LOGIC;
    in_imag_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_imag_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_imag_7_ce0 : OUT STD_LOGIC;
    in_imag_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_imag_7_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_imag_7_ce1 : OUT STD_LOGIC;
    in_imag_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of sr_fft_fft_64pt_Pipeline_VITIS_LOOP_271_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln271_fu_780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal i_reg_963 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln271_fu_786_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln271_reg_972 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln273_1_fu_830_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln273_1_reg_1057 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln273_fu_810_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln274_fu_846_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln273_1_fu_869_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_2_fu_110 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_5_fu_900_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_926_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_722_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_747_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_722_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_747_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln273_fu_792_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln1_fu_796_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln273_fu_804_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln274_fu_840_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln271_fu_866_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_fu_900_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_6_fu_926_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sr_fft_mux_83_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sr_fft_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_83_32_1_1_U469 : component sr_fft_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => in_real_0_q0,
        din1 => in_real_1_q0,
        din2 => in_real_2_q0,
        din3 => in_real_3_q0,
        din4 => in_real_4_q0,
        din5 => in_real_5_q0,
        din6 => in_real_6_q0,
        din7 => in_real_7_q0,
        din8 => grp_fu_722_p9,
        dout => grp_fu_722_p10);

    mux_83_32_1_1_U470 : component sr_fft_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => in_imag_0_q0,
        din1 => in_imag_1_q0,
        din2 => in_imag_2_q0,
        din3 => in_imag_3_q0,
        din4 => in_imag_4_q0,
        din5 => in_imag_5_q0,
        din6 => in_imag_6_q0,
        din7 => in_imag_7_q0,
        din8 => grp_fu_747_p9,
        dout => grp_fu_747_p10);

    mux_83_32_1_1_U471 : component sr_fft_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => in_real_0_q1,
        din1 => in_real_1_q1,
        din2 => in_real_2_q1,
        din3 => in_real_3_q1,
        din4 => in_real_4_q1,
        din5 => in_real_5_q1,
        din6 => in_real_6_q1,
        din7 => in_real_7_q1,
        din8 => tmp_5_fu_900_p9,
        dout => tmp_5_fu_900_p10);

    mux_83_32_1_1_U472 : component sr_fft_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => in_imag_0_q1,
        din1 => in_imag_1_q1,
        din2 => in_imag_2_q1,
        din3 => in_imag_3_q1,
        din4 => in_imag_4_q1,
        din5 => in_imag_5_q1,
        din6 => in_imag_6_q1,
        din7 => in_imag_7_q1,
        din8 => tmp_6_fu_926_p9,
        dout => tmp_6_fu_926_p10);

    flow_control_loop_pipe_sequential_init_U : component sr_fft_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_start_int = ap_const_logic_1) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    i_2_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_2_fu_110 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                i_2_fu_110 <= add_ln271_reg_972;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                add_ln271_reg_972 <= add_ln271_fu_786_p2;
                i_reg_963 <= ap_sig_allocacmp_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                trunc_ln273_1_reg_1057 <= ap_sig_allocacmp_i(3 downto 2);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, icmp_ln271_fu_780_p2, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start_int = ap_const_logic_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln271_fu_786_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start_int)
    begin
        if ((ap_start_int = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_state1, icmp_ln271_fu_780_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state1, ap_loop_exit_ready, ap_done_reg, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_assign_proc : process(ap_CS_fsm_state1, i_2_fu_110, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_i <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_i <= i_2_fu_110;
        end if; 
    end process;

    grp_fu_722_p9 <= i_reg_963(3 downto 1);
    grp_fu_747_p9 <= i_reg_963(3 downto 1);
    icmp_ln271_fu_780_p2 <= "1" when (ap_sig_allocacmp_i = ap_const_lv5_10) else "0";
    in_imag_0_address0 <= zext_ln274_fu_846_p1(3 - 1 downto 0);
    in_imag_0_address1 <= zext_ln273_fu_810_p1(3 - 1 downto 0);

    in_imag_0_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln271_fu_780_p2, trunc_ln273_1_fu_830_p4, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_3) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_0) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_2) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_imag_0_ce0 <= ap_const_logic_1;
        else 
            in_imag_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_imag_0_ce1_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_imag_0_ce1 <= ap_const_logic_1;
        else 
            in_imag_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_imag_1_address0 <= zext_ln274_fu_846_p1(3 - 1 downto 0);
    in_imag_1_address1 <= zext_ln273_fu_810_p1(3 - 1 downto 0);

    in_imag_1_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln271_fu_780_p2, trunc_ln273_1_fu_830_p4, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_3) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_0) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_2) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_imag_1_ce0 <= ap_const_logic_1;
        else 
            in_imag_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_imag_1_ce1_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_imag_1_ce1 <= ap_const_logic_1;
        else 
            in_imag_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_imag_2_address0 <= zext_ln274_fu_846_p1(3 - 1 downto 0);
    in_imag_2_address1 <= zext_ln273_fu_810_p1(3 - 1 downto 0);

    in_imag_2_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln271_fu_780_p2, trunc_ln273_1_fu_830_p4, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_3) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_0) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_2) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_imag_2_ce0 <= ap_const_logic_1;
        else 
            in_imag_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_imag_2_ce1_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_imag_2_ce1 <= ap_const_logic_1;
        else 
            in_imag_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_imag_3_address0 <= zext_ln274_fu_846_p1(3 - 1 downto 0);
    in_imag_3_address1 <= zext_ln273_fu_810_p1(3 - 1 downto 0);

    in_imag_3_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln271_fu_780_p2, trunc_ln273_1_fu_830_p4, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_3) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_0) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_2) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_imag_3_ce0 <= ap_const_logic_1;
        else 
            in_imag_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_imag_3_ce1_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_imag_3_ce1 <= ap_const_logic_1;
        else 
            in_imag_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_imag_4_address0 <= zext_ln274_fu_846_p1(3 - 1 downto 0);
    in_imag_4_address1 <= zext_ln273_fu_810_p1(3 - 1 downto 0);

    in_imag_4_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln271_fu_780_p2, trunc_ln273_1_fu_830_p4, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_3) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_0) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_2) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_imag_4_ce0 <= ap_const_logic_1;
        else 
            in_imag_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_imag_4_ce1_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_imag_4_ce1 <= ap_const_logic_1;
        else 
            in_imag_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_imag_5_address0 <= zext_ln274_fu_846_p1(3 - 1 downto 0);
    in_imag_5_address1 <= zext_ln273_fu_810_p1(3 - 1 downto 0);

    in_imag_5_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln271_fu_780_p2, trunc_ln273_1_fu_830_p4, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_3) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_0) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_2) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_imag_5_ce0 <= ap_const_logic_1;
        else 
            in_imag_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_imag_5_ce1_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_imag_5_ce1 <= ap_const_logic_1;
        else 
            in_imag_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_imag_6_address0 <= zext_ln274_fu_846_p1(3 - 1 downto 0);
    in_imag_6_address1 <= zext_ln273_fu_810_p1(3 - 1 downto 0);

    in_imag_6_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln271_fu_780_p2, trunc_ln273_1_fu_830_p4, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_3) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_0) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_2) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_imag_6_ce0 <= ap_const_logic_1;
        else 
            in_imag_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_imag_6_ce1_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_imag_6_ce1 <= ap_const_logic_1;
        else 
            in_imag_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_imag_7_address0 <= zext_ln274_fu_846_p1(3 - 1 downto 0);
    in_imag_7_address1 <= zext_ln273_fu_810_p1(3 - 1 downto 0);

    in_imag_7_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln271_fu_780_p2, trunc_ln273_1_fu_830_p4, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_3) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_0) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_2) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_imag_7_ce0 <= ap_const_logic_1;
        else 
            in_imag_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_imag_7_ce1_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_imag_7_ce1 <= ap_const_logic_1;
        else 
            in_imag_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_real_0_address0 <= zext_ln274_fu_846_p1(3 - 1 downto 0);
    in_real_0_address1 <= zext_ln273_fu_810_p1(3 - 1 downto 0);

    in_real_0_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln271_fu_780_p2, trunc_ln273_1_fu_830_p4, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_3) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_0) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_2) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_real_0_ce0 <= ap_const_logic_1;
        else 
            in_real_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_real_0_ce1_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_real_0_ce1 <= ap_const_logic_1;
        else 
            in_real_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_real_1_address0 <= zext_ln274_fu_846_p1(3 - 1 downto 0);
    in_real_1_address1 <= zext_ln273_fu_810_p1(3 - 1 downto 0);

    in_real_1_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln271_fu_780_p2, trunc_ln273_1_fu_830_p4, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_3) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_0) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_2) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_real_1_ce0 <= ap_const_logic_1;
        else 
            in_real_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_real_1_ce1_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_real_1_ce1 <= ap_const_logic_1;
        else 
            in_real_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_real_2_address0 <= zext_ln274_fu_846_p1(3 - 1 downto 0);
    in_real_2_address1 <= zext_ln273_fu_810_p1(3 - 1 downto 0);

    in_real_2_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln271_fu_780_p2, trunc_ln273_1_fu_830_p4, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_3) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_0) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_2) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_real_2_ce0 <= ap_const_logic_1;
        else 
            in_real_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_real_2_ce1_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_real_2_ce1 <= ap_const_logic_1;
        else 
            in_real_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_real_3_address0 <= zext_ln274_fu_846_p1(3 - 1 downto 0);
    in_real_3_address1 <= zext_ln273_fu_810_p1(3 - 1 downto 0);

    in_real_3_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln271_fu_780_p2, trunc_ln273_1_fu_830_p4, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_3) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_0) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_2) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_real_3_ce0 <= ap_const_logic_1;
        else 
            in_real_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_real_3_ce1_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_real_3_ce1 <= ap_const_logic_1;
        else 
            in_real_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_real_4_address0 <= zext_ln274_fu_846_p1(3 - 1 downto 0);
    in_real_4_address1 <= zext_ln273_fu_810_p1(3 - 1 downto 0);

    in_real_4_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln271_fu_780_p2, trunc_ln273_1_fu_830_p4, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_3) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_0) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_2) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_real_4_ce0 <= ap_const_logic_1;
        else 
            in_real_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_real_4_ce1_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_real_4_ce1 <= ap_const_logic_1;
        else 
            in_real_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_real_5_address0 <= zext_ln274_fu_846_p1(3 - 1 downto 0);
    in_real_5_address1 <= zext_ln273_fu_810_p1(3 - 1 downto 0);

    in_real_5_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln271_fu_780_p2, trunc_ln273_1_fu_830_p4, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_3) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_0) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_2) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_real_5_ce0 <= ap_const_logic_1;
        else 
            in_real_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_real_5_ce1_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_real_5_ce1 <= ap_const_logic_1;
        else 
            in_real_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_real_6_address0 <= zext_ln274_fu_846_p1(3 - 1 downto 0);
    in_real_6_address1 <= zext_ln273_fu_810_p1(3 - 1 downto 0);

    in_real_6_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln271_fu_780_p2, trunc_ln273_1_fu_830_p4, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_3) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_0) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_2) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_real_6_ce0 <= ap_const_logic_1;
        else 
            in_real_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_real_6_ce1_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_real_6_ce1 <= ap_const_logic_1;
        else 
            in_real_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_real_7_address0 <= zext_ln274_fu_846_p1(3 - 1 downto 0);
    in_real_7_address1 <= zext_ln273_fu_810_p1(3 - 1 downto 0);

    in_real_7_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln271_fu_780_p2, trunc_ln273_1_fu_830_p4, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_3) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_0) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_1) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start_int = ap_const_logic_1) and (trunc_ln273_1_fu_830_p4 = ap_const_lv2_2) and (icmp_ln271_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_real_7_ce0 <= ap_const_logic_1;
        else 
            in_real_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_real_7_ce1_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_real_7_ce1 <= ap_const_logic_1;
        else 
            in_real_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    o1_in_imag_V_1_address0 <= zext_ln273_1_fu_869_p1(2 - 1 downto 0);

    o1_in_imag_V_1_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            o1_in_imag_V_1_ce0 <= ap_const_logic_1;
        else 
            o1_in_imag_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_in_imag_V_1_d0 <= tmp_6_fu_926_p10;

    o1_in_imag_V_1_we0_assign_proc : process(ap_CS_fsm_state2, trunc_ln273_1_reg_1057)
    begin
        if (((trunc_ln273_1_reg_1057 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o1_in_imag_V_1_we0 <= ap_const_logic_1;
        else 
            o1_in_imag_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_in_imag_V_2_address0 <= zext_ln273_1_fu_869_p1(2 - 1 downto 0);

    o1_in_imag_V_2_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            o1_in_imag_V_2_ce0 <= ap_const_logic_1;
        else 
            o1_in_imag_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_in_imag_V_2_d0 <= tmp_6_fu_926_p10;

    o1_in_imag_V_2_we0_assign_proc : process(ap_CS_fsm_state2, trunc_ln273_1_reg_1057)
    begin
        if (((trunc_ln273_1_reg_1057 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o1_in_imag_V_2_we0 <= ap_const_logic_1;
        else 
            o1_in_imag_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_in_imag_V_3_address0 <= zext_ln273_1_fu_869_p1(2 - 1 downto 0);

    o1_in_imag_V_3_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            o1_in_imag_V_3_ce0 <= ap_const_logic_1;
        else 
            o1_in_imag_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_in_imag_V_3_d0 <= tmp_6_fu_926_p10;

    o1_in_imag_V_3_we0_assign_proc : process(ap_CS_fsm_state2, trunc_ln273_1_reg_1057)
    begin
        if (((trunc_ln273_1_reg_1057 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o1_in_imag_V_3_we0 <= ap_const_logic_1;
        else 
            o1_in_imag_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_in_imag_V_address0 <= zext_ln273_1_fu_869_p1(2 - 1 downto 0);

    o1_in_imag_V_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            o1_in_imag_V_ce0 <= ap_const_logic_1;
        else 
            o1_in_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_in_imag_V_d0 <= tmp_6_fu_926_p10;

    o1_in_imag_V_we0_assign_proc : process(ap_CS_fsm_state2, trunc_ln273_1_reg_1057)
    begin
        if (((trunc_ln273_1_reg_1057 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o1_in_imag_V_we0 <= ap_const_logic_1;
        else 
            o1_in_imag_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_in_real_V_1_address0 <= zext_ln273_1_fu_869_p1(2 - 1 downto 0);

    o1_in_real_V_1_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            o1_in_real_V_1_ce0 <= ap_const_logic_1;
        else 
            o1_in_real_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_in_real_V_1_d0 <= tmp_5_fu_900_p10;

    o1_in_real_V_1_we0_assign_proc : process(ap_CS_fsm_state2, trunc_ln273_1_reg_1057)
    begin
        if (((trunc_ln273_1_reg_1057 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o1_in_real_V_1_we0 <= ap_const_logic_1;
        else 
            o1_in_real_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_in_real_V_2_address0 <= zext_ln273_1_fu_869_p1(2 - 1 downto 0);

    o1_in_real_V_2_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            o1_in_real_V_2_ce0 <= ap_const_logic_1;
        else 
            o1_in_real_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_in_real_V_2_d0 <= tmp_5_fu_900_p10;

    o1_in_real_V_2_we0_assign_proc : process(ap_CS_fsm_state2, trunc_ln273_1_reg_1057)
    begin
        if (((trunc_ln273_1_reg_1057 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o1_in_real_V_2_we0 <= ap_const_logic_1;
        else 
            o1_in_real_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_in_real_V_3_address0 <= zext_ln273_1_fu_869_p1(2 - 1 downto 0);

    o1_in_real_V_3_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            o1_in_real_V_3_ce0 <= ap_const_logic_1;
        else 
            o1_in_real_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_in_real_V_3_d0 <= tmp_5_fu_900_p10;

    o1_in_real_V_3_we0_assign_proc : process(ap_CS_fsm_state2, trunc_ln273_1_reg_1057)
    begin
        if (((trunc_ln273_1_reg_1057 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o1_in_real_V_3_we0 <= ap_const_logic_1;
        else 
            o1_in_real_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_in_real_V_address0 <= zext_ln273_1_fu_869_p1(2 - 1 downto 0);

    o1_in_real_V_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            o1_in_real_V_ce0 <= ap_const_logic_1;
        else 
            o1_in_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_in_real_V_d0 <= tmp_5_fu_900_p10;

    o1_in_real_V_we0_assign_proc : process(ap_CS_fsm_state2, trunc_ln273_1_reg_1057)
    begin
        if (((trunc_ln273_1_reg_1057 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o1_in_real_V_we0 <= ap_const_logic_1;
        else 
            o1_in_real_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_in_imag_V_1_address0 <= zext_ln273_1_fu_869_p1(2 - 1 downto 0);

    o2_in_imag_V_1_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            o2_in_imag_V_1_ce0 <= ap_const_logic_1;
        else 
            o2_in_imag_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_in_imag_V_1_d0 <= grp_fu_747_p10;

    o2_in_imag_V_1_we0_assign_proc : process(ap_CS_fsm_state2, trunc_ln273_1_reg_1057)
    begin
        if (((trunc_ln273_1_reg_1057 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o2_in_imag_V_1_we0 <= ap_const_logic_1;
        else 
            o2_in_imag_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_in_imag_V_2_address0 <= zext_ln273_1_fu_869_p1(2 - 1 downto 0);

    o2_in_imag_V_2_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            o2_in_imag_V_2_ce0 <= ap_const_logic_1;
        else 
            o2_in_imag_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_in_imag_V_2_d0 <= grp_fu_747_p10;

    o2_in_imag_V_2_we0_assign_proc : process(ap_CS_fsm_state2, trunc_ln273_1_reg_1057)
    begin
        if (((trunc_ln273_1_reg_1057 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o2_in_imag_V_2_we0 <= ap_const_logic_1;
        else 
            o2_in_imag_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_in_imag_V_3_address0 <= zext_ln273_1_fu_869_p1(2 - 1 downto 0);

    o2_in_imag_V_3_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            o2_in_imag_V_3_ce0 <= ap_const_logic_1;
        else 
            o2_in_imag_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_in_imag_V_3_d0 <= grp_fu_747_p10;

    o2_in_imag_V_3_we0_assign_proc : process(ap_CS_fsm_state2, trunc_ln273_1_reg_1057)
    begin
        if (((trunc_ln273_1_reg_1057 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o2_in_imag_V_3_we0 <= ap_const_logic_1;
        else 
            o2_in_imag_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_in_imag_V_address0 <= zext_ln273_1_fu_869_p1(2 - 1 downto 0);

    o2_in_imag_V_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            o2_in_imag_V_ce0 <= ap_const_logic_1;
        else 
            o2_in_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_in_imag_V_d0 <= grp_fu_747_p10;

    o2_in_imag_V_we0_assign_proc : process(ap_CS_fsm_state2, trunc_ln273_1_reg_1057)
    begin
        if (((trunc_ln273_1_reg_1057 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o2_in_imag_V_we0 <= ap_const_logic_1;
        else 
            o2_in_imag_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_in_real_V_1_address0 <= zext_ln273_1_fu_869_p1(2 - 1 downto 0);

    o2_in_real_V_1_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            o2_in_real_V_1_ce0 <= ap_const_logic_1;
        else 
            o2_in_real_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_in_real_V_1_d0 <= grp_fu_722_p10;

    o2_in_real_V_1_we0_assign_proc : process(ap_CS_fsm_state2, trunc_ln273_1_reg_1057)
    begin
        if (((trunc_ln273_1_reg_1057 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o2_in_real_V_1_we0 <= ap_const_logic_1;
        else 
            o2_in_real_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_in_real_V_2_address0 <= zext_ln273_1_fu_869_p1(2 - 1 downto 0);

    o2_in_real_V_2_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            o2_in_real_V_2_ce0 <= ap_const_logic_1;
        else 
            o2_in_real_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_in_real_V_2_d0 <= grp_fu_722_p10;

    o2_in_real_V_2_we0_assign_proc : process(ap_CS_fsm_state2, trunc_ln273_1_reg_1057)
    begin
        if (((trunc_ln273_1_reg_1057 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o2_in_real_V_2_we0 <= ap_const_logic_1;
        else 
            o2_in_real_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_in_real_V_3_address0 <= zext_ln273_1_fu_869_p1(2 - 1 downto 0);

    o2_in_real_V_3_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            o2_in_real_V_3_ce0 <= ap_const_logic_1;
        else 
            o2_in_real_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_in_real_V_3_d0 <= grp_fu_722_p10;

    o2_in_real_V_3_we0_assign_proc : process(ap_CS_fsm_state2, trunc_ln273_1_reg_1057)
    begin
        if (((trunc_ln273_1_reg_1057 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o2_in_real_V_3_we0 <= ap_const_logic_1;
        else 
            o2_in_real_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_in_real_V_address0 <= zext_ln273_1_fu_869_p1(2 - 1 downto 0);

    o2_in_real_V_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            o2_in_real_V_ce0 <= ap_const_logic_1;
        else 
            o2_in_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_in_real_V_d0 <= grp_fu_722_p10;

    o2_in_real_V_we0_assign_proc : process(ap_CS_fsm_state2, trunc_ln273_1_reg_1057)
    begin
        if (((trunc_ln273_1_reg_1057 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o2_in_real_V_we0 <= ap_const_logic_1;
        else 
            o2_in_real_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln273_fu_804_p2 <= (shl_ln1_fu_796_p3 or ap_const_lv3_1);
    or_ln274_fu_840_p2 <= (shl_ln1_fu_796_p3 or ap_const_lv3_3);
    shl_ln1_fu_796_p3 <= (trunc_ln273_fu_792_p1 & ap_const_lv2_0);
    tmp_5_fu_900_p9 <= i_reg_963(3 downto 1);
    tmp_6_fu_926_p9 <= i_reg_963(3 downto 1);
    trunc_ln271_fu_866_p1 <= i_reg_963(2 - 1 downto 0);
    trunc_ln273_1_fu_830_p4 <= ap_sig_allocacmp_i(3 downto 2);
    trunc_ln273_fu_792_p1 <= ap_sig_allocacmp_i(1 - 1 downto 0);
    zext_ln273_1_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln271_fu_866_p1),64));
    zext_ln273_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln273_fu_804_p2),64));
    zext_ln274_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln274_fu_840_p2),64));
end behav;
