-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sr_fft_fft_64pt_Pipeline_VITIS_LOOP_281_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    e_out_real_V_4_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_real_V_4_ce0 : OUT STD_LOGIC;
    e_out_real_V_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_real_V_5_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_real_V_5_ce0 : OUT STD_LOGIC;
    e_out_real_V_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_real_V_6_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_real_V_6_ce0 : OUT STD_LOGIC;
    e_out_real_V_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_real_V_7_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_real_V_7_ce0 : OUT STD_LOGIC;
    e_out_real_V_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_imag_V_4_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_imag_V_4_ce0 : OUT STD_LOGIC;
    e_out_imag_V_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_imag_V_5_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_imag_V_5_ce0 : OUT STD_LOGIC;
    e_out_imag_V_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_imag_V_6_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_imag_V_6_ce0 : OUT STD_LOGIC;
    e_out_imag_V_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_imag_V_7_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_imag_V_7_ce0 : OUT STD_LOGIC;
    e_out_imag_V_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_real_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_real_2_ce0 : OUT STD_LOGIC;
    out_real_2_we0 : OUT STD_LOGIC;
    out_real_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_real_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_real_3_ce0 : OUT STD_LOGIC;
    out_real_3_we0 : OUT STD_LOGIC;
    out_real_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_imag_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_imag_2_ce0 : OUT STD_LOGIC;
    out_imag_2_we0 : OUT STD_LOGIC;
    out_imag_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_imag_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_imag_3_ce0 : OUT STD_LOGIC;
    out_imag_3_we0 : OUT STD_LOGIC;
    out_imag_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_real_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_real_4_ce0 : OUT STD_LOGIC;
    out_real_4_we0 : OUT STD_LOGIC;
    out_real_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_imag_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_imag_4_ce0 : OUT STD_LOGIC;
    out_imag_4_we0 : OUT STD_LOGIC;
    out_imag_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_imag_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_imag_5_ce0 : OUT STD_LOGIC;
    out_imag_5_we0 : OUT STD_LOGIC;
    out_imag_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_real_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_real_6_ce0 : OUT STD_LOGIC;
    out_real_6_we0 : OUT STD_LOGIC;
    out_real_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_imag_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_imag_6_ce0 : OUT STD_LOGIC;
    out_imag_6_we0 : OUT STD_LOGIC;
    out_imag_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_imag_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_imag_7_ce0 : OUT STD_LOGIC;
    out_imag_7_we0 : OUT STD_LOGIC;
    out_imag_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_imag_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_imag_1_ce0 : OUT STD_LOGIC;
    out_imag_1_we0 : OUT STD_LOGIC;
    out_imag_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_imag_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_imag_0_ce0 : OUT STD_LOGIC;
    out_imag_0_we0 : OUT STD_LOGIC;
    out_imag_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_real_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_real_7_ce0 : OUT STD_LOGIC;
    out_real_7_we0 : OUT STD_LOGIC;
    out_real_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_real_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_real_5_ce0 : OUT STD_LOGIC;
    out_real_5_we0 : OUT STD_LOGIC;
    out_real_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_real_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_real_1_ce0 : OUT STD_LOGIC;
    out_real_1_we0 : OUT STD_LOGIC;
    out_real_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_real_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_real_0_ce0 : OUT STD_LOGIC;
    out_real_0_we0 : OUT STD_LOGIC;
    out_real_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o1_out_real_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_out_real_V_ce0 : OUT STD_LOGIC;
    o1_out_real_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o1_out_real_V_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_out_real_V_1_ce0 : OUT STD_LOGIC;
    o1_out_real_V_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o1_out_real_V_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_out_real_V_2_ce0 : OUT STD_LOGIC;
    o1_out_real_V_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o1_out_real_V_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_out_real_V_3_ce0 : OUT STD_LOGIC;
    o1_out_real_V_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o1_out_imag_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_out_imag_V_ce0 : OUT STD_LOGIC;
    o1_out_imag_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o1_out_imag_V_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_out_imag_V_1_ce0 : OUT STD_LOGIC;
    o1_out_imag_V_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o1_out_imag_V_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_out_imag_V_2_ce0 : OUT STD_LOGIC;
    o1_out_imag_V_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o1_out_imag_V_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o1_out_imag_V_3_ce0 : OUT STD_LOGIC;
    o1_out_imag_V_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o2_out_real_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_out_real_V_ce0 : OUT STD_LOGIC;
    o2_out_real_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o2_out_real_V_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_out_real_V_1_ce0 : OUT STD_LOGIC;
    o2_out_real_V_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o2_out_real_V_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_out_real_V_2_ce0 : OUT STD_LOGIC;
    o2_out_real_V_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o2_out_real_V_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_out_real_V_3_ce0 : OUT STD_LOGIC;
    o2_out_real_V_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o2_out_imag_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_out_imag_V_ce0 : OUT STD_LOGIC;
    o2_out_imag_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o2_out_imag_V_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_out_imag_V_1_ce0 : OUT STD_LOGIC;
    o2_out_imag_V_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o2_out_imag_V_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_out_imag_V_2_ce0 : OUT STD_LOGIC;
    o2_out_imag_V_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    o2_out_imag_V_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    o2_out_imag_V_3_ce0 : OUT STD_LOGIC;
    o2_out_imag_V_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_real_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_real_V_ce0 : OUT STD_LOGIC;
    e_out_real_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_real_V_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_real_V_1_ce0 : OUT STD_LOGIC;
    e_out_real_V_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_real_V_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_real_V_2_ce0 : OUT STD_LOGIC;
    e_out_real_V_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_real_V_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_real_V_3_ce0 : OUT STD_LOGIC;
    e_out_real_V_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_imag_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_imag_V_ce0 : OUT STD_LOGIC;
    e_out_imag_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_imag_V_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_imag_V_1_ce0 : OUT STD_LOGIC;
    e_out_imag_V_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_imag_V_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_imag_V_2_ce0 : OUT STD_LOGIC;
    e_out_imag_V_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    e_out_imag_V_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    e_out_imag_V_3_ce0 : OUT STD_LOGIC;
    e_out_imag_V_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_616_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_616_p_din1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    grp_fu_616_p_dout0 : IN STD_LOGIC_VECTOR (47 downto 0);
    grp_fu_616_p_ce : OUT STD_LOGIC;
    grp_fu_620_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_620_p_din1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    grp_fu_620_p_dout0 : IN STD_LOGIC_VECTOR (47 downto 0);
    grp_fu_620_p_ce : OUT STD_LOGIC;
    grp_fu_624_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_624_p_din1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    grp_fu_624_p_dout0 : IN STD_LOGIC_VECTOR (47 downto 0);
    grp_fu_624_p_ce : OUT STD_LOGIC;
    grp_fu_628_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_628_p_din1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    grp_fu_628_p_dout0 : IN STD_LOGIC_VECTOR (47 downto 0);
    grp_fu_628_p_ce : OUT STD_LOGIC;
    grp_fu_632_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_632_p_din1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    grp_fu_632_p_dout0 : IN STD_LOGIC_VECTOR (47 downto 0);
    grp_fu_632_p_ce : OUT STD_LOGIC;
    grp_fu_636_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_636_p_din1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    grp_fu_636_p_dout0 : IN STD_LOGIC_VECTOR (47 downto 0);
    grp_fu_636_p_ce : OUT STD_LOGIC;
    grp_fu_640_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_640_p_din1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    grp_fu_640_p_dout0 : IN STD_LOGIC_VECTOR (47 downto 0);
    grp_fu_640_p_ce : OUT STD_LOGIC;
    grp_fu_644_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_644_p_din1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    grp_fu_644_p_dout0 : IN STD_LOGIC_VECTOR (47 downto 0);
    grp_fu_644_p_ce : OUT STD_LOGIC );
end;


architecture behav of sr_fft_fft_64pt_Pipeline_VITIS_LOOP_281_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal icmp_ln281_reg_1251 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage3 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal TWIDDLE_REAL_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal TWIDDLE_REAL_V_ce0 : STD_LOGIC;
    signal TWIDDLE_REAL_V_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal TWIDDLE_IMAG_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal TWIDDLE_IMAG_V_ce0 : STD_LOGIC;
    signal TWIDDLE_IMAG_V_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal reg_816 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal reg_820 : STD_LOGIC_VECTOR (17 downto 0);
    signal k_1_reg_1242 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln281_fu_832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln286_fu_854_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln286_reg_1265 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln281_fu_879_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln281_reg_1365 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln281_reg_1365_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln286_cast_reg_1380 : STD_LOGIC_VECTOR (1 downto 0);
    signal b_real_V_fu_917_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_real_V_reg_1388 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_imag_V_fu_931_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_imag_V_reg_1393 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_real_V_1_fu_945_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_real_V_1_reg_1398 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_imag_V_1_fu_959_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_imag_V_1_reg_1403 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_1408 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1408_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1273_fu_980_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_reg_1412 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_1_fu_983_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_1_reg_1418 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_2_fu_987_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_2_reg_1424 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_3_fu_990_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_3_reg_1430 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln813_reg_1436 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal mul_ln1348_reg_1441 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_real_V_8_reg_1446 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal mul_ln813_1_reg_1452 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1347_reg_1457 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_4_fu_1028_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_4_reg_1462 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_5_fu_1031_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_5_reg_1468 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_6_fu_1035_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_6_reg_1474 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_7_fu_1038_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1273_7_reg_1480 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_imag_V_11_reg_1486 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln813_2_reg_1492 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1348_1_reg_1497 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln813_3_reg_1582 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1347_1_reg_1587 : STD_LOGIC_VECTOR (47 downto 0);
    signal b_real_V_3_fu_1090_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_real_V_3_reg_1592 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_real_V_6_fu_1095_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_real_V_6_reg_1598 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_real_V_1_fu_1100_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_real_V_1_reg_1604 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_imag_V_1_fu_1113_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_imag_V_1_reg_1610 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_real_V_3_fu_1126_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_real_V_3_reg_1616 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_imag_V_3_fu_1139_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_imag_V_3_reg_1622 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_imag_V_3_fu_1166_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_imag_V_3_reg_1628 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_imag_V_2_fu_1171_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_imag_V_2_reg_1634 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln292_fu_1182_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln292_reg_1640 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal zext_ln281_fu_844_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln79_fu_902_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal k_fu_146 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln281_fu_838_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_k_1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_real_V_fu_1176_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_imag_V_6_fu_1193_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_real_V_6_fu_1199_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_imag_V_9_fu_1205_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_imag_V_fu_1211_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_real_V_5_fu_1217_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_imag_V_7_fu_1223_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_real_V_7_fu_1229_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln281_1_fu_850_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln284_fu_885_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln2_fu_888_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln281_1_fu_882_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln284_fu_896_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_real_V_fu_917_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal b_imag_V_fu_931_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal b_real_V_1_fu_945_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal b_imag_V_1_fu_959_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ret_V_fu_1014_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal ret_V_1_fu_1054_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal ret_V_2_fu_1076_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_real_V_9_fu_1080_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_3_fu_1152_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_imag_V_12_fu_1156_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sr_fft_mux_42_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sr_fft_mul_32s_18s_48_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component sr_fft_fft_16pt_Pipeline_VITIS_LOOP_131_2_TWIDDLE_REAL_V_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component sr_fft_fft_16pt_Pipeline_VITIS_LOOP_131_2_TWIDDLE_IMAG_V_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component sr_fft_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    TWIDDLE_REAL_V_U : component sr_fft_fft_16pt_Pipeline_VITIS_LOOP_131_2_TWIDDLE_REAL_V_ROM_AUTO_1R
    generic map (
        DataWidth => 18,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => TWIDDLE_REAL_V_address0,
        ce0 => TWIDDLE_REAL_V_ce0,
        q0 => TWIDDLE_REAL_V_q0);

    TWIDDLE_IMAG_V_U : component sr_fft_fft_16pt_Pipeline_VITIS_LOOP_131_2_TWIDDLE_IMAG_V_ROM_AUTO_1R
    generic map (
        DataWidth => 18,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => TWIDDLE_IMAG_V_address0,
        ce0 => TWIDDLE_IMAG_V_ce0,
        q0 => TWIDDLE_IMAG_V_q0);

    mux_42_32_1_1_U505 : component sr_fft_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => o1_out_real_V_q0,
        din1 => o1_out_real_V_1_q0,
        din2 => o1_out_real_V_2_q0,
        din3 => o1_out_real_V_3_q0,
        din4 => b_real_V_fu_917_p5,
        dout => b_real_V_fu_917_p6);

    mux_42_32_1_1_U506 : component sr_fft_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => o1_out_imag_V_q0,
        din1 => o1_out_imag_V_1_q0,
        din2 => o1_out_imag_V_2_q0,
        din3 => o1_out_imag_V_3_q0,
        din4 => b_imag_V_fu_931_p5,
        dout => b_imag_V_fu_931_p6);

    mux_42_32_1_1_U507 : component sr_fft_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => o2_out_real_V_q0,
        din1 => o2_out_real_V_1_q0,
        din2 => o2_out_real_V_2_q0,
        din3 => o2_out_real_V_3_q0,
        din4 => b_real_V_1_fu_945_p5,
        dout => b_real_V_1_fu_945_p6);

    mux_42_32_1_1_U508 : component sr_fft_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => o2_out_imag_V_q0,
        din1 => o2_out_imag_V_1_q0,
        din2 => o2_out_imag_V_2_q0,
        din3 => o2_out_imag_V_3_q0,
        din4 => b_imag_V_1_fu_959_p5,
        dout => b_imag_V_1_fu_959_p6);

    mux_42_32_1_1_U517 : component sr_fft_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => e_out_real_V_q0,
        din1 => e_out_real_V_1_q0,
        din2 => e_out_real_V_2_q0,
        din3 => e_out_real_V_3_q0,
        din4 => lshr_ln286_cast_reg_1380,
        dout => a_real_V_1_fu_1100_p6);

    mux_42_32_1_1_U518 : component sr_fft_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => e_out_imag_V_q0,
        din1 => e_out_imag_V_1_q0,
        din2 => e_out_imag_V_2_q0,
        din3 => e_out_imag_V_3_q0,
        din4 => lshr_ln286_cast_reg_1380,
        dout => a_imag_V_1_fu_1113_p6);

    mux_42_32_1_1_U519 : component sr_fft_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => e_out_real_V_4_q0,
        din1 => e_out_real_V_5_q0,
        din2 => e_out_real_V_6_q0,
        din3 => e_out_real_V_7_q0,
        din4 => lshr_ln286_cast_reg_1380,
        dout => a_real_V_3_fu_1126_p6);

    mux_42_32_1_1_U520 : component sr_fft_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => e_out_imag_V_4_q0,
        din1 => e_out_imag_V_5_q0,
        din2 => e_out_imag_V_6_q0,
        din3 => e_out_imag_V_7_q0,
        din4 => lshr_ln286_cast_reg_1380,
        dout => a_imag_V_3_fu_1139_p6);

    flow_control_loop_pipe_sequential_init_U : component sr_fft_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage3,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage3)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    k_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln281_fu_832_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    k_fu_146 <= add_ln281_fu_838_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    k_fu_146 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                a_imag_V_1_reg_1610 <= a_imag_V_1_fu_1113_p6;
                a_imag_V_3_reg_1622 <= a_imag_V_3_fu_1139_p6;
                a_real_V_1_reg_1604 <= a_real_V_1_fu_1100_p6;
                a_real_V_3_reg_1616 <= a_real_V_3_fu_1126_p6;
                a_real_V_6_reg_1598 <= a_real_V_6_fu_1095_p2;
                b_real_V_3_reg_1592 <= b_real_V_3_fu_1090_p2;
                mul_ln1347_1_reg_1587 <= grp_fu_640_p_dout0;
                mul_ln813_3_reg_1582 <= grp_fu_636_p_dout0;
                tmp_reg_1408_pp0_iter1_reg <= tmp_reg_1408;
                trunc_ln281_reg_1365_pp0_iter1_reg <= trunc_ln281_reg_1365;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                a_imag_V_2_reg_1634 <= a_imag_V_2_fu_1171_p2;
                b_imag_V_3_reg_1628 <= b_imag_V_3_fu_1166_p2;
                    zext_ln292_reg_1640(2 downto 0) <= zext_ln292_fu_1182_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln281_reg_1251 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                b_imag_V_1_reg_1403 <= b_imag_V_1_fu_959_p6;
                b_imag_V_reg_1393 <= b_imag_V_fu_931_p6;
                b_real_V_1_reg_1398 <= b_real_V_1_fu_945_p6;
                b_real_V_reg_1388 <= b_real_V_fu_917_p6;
                lshr_ln286_cast_reg_1380 <= k_1_reg_1242(3 downto 2);
                tmp_reg_1408 <= k_1_reg_1242(3 downto 3);
                trunc_ln281_reg_1365 <= trunc_ln281_fu_879_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln281_reg_1251 <= icmp_ln281_fu_832_p2;
                k_1_reg_1242 <= ap_sig_allocacmp_k_1;
                mul_ln1348_1_reg_1497 <= grp_fu_632_p_dout0;
                mul_ln813_2_reg_1492 <= grp_fu_628_p_dout0;
                r_imag_V_11_reg_1486 <= ret_V_1_fu_1054_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln281_reg_1251 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                mul_ln1347_reg_1457 <= grp_fu_624_p_dout0;
                mul_ln813_1_reg_1452 <= grp_fu_620_p_dout0;
                r_real_V_8_reg_1446 <= ret_V_fu_1014_p2(47 downto 16);
                sext_ln1273_4_reg_1462 <= sext_ln1273_4_fu_1028_p1;
                sext_ln1273_5_reg_1468 <= sext_ln1273_5_fu_1031_p1;
                sext_ln1273_6_reg_1474 <= sext_ln1273_6_fu_1035_p1;
                sext_ln1273_7_reg_1480 <= sext_ln1273_7_fu_1038_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln281_reg_1251 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_ln1348_reg_1441 <= grp_fu_616_p_dout0;
                mul_ln813_reg_1436 <= grp_fu_644_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln281_reg_1251 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln281_reg_1251 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_816 <= TWIDDLE_REAL_V_q0;
                reg_820 <= TWIDDLE_IMAG_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln281_reg_1251 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                sext_ln1273_1_reg_1418 <= sext_ln1273_1_fu_983_p1;
                sext_ln1273_2_reg_1424 <= sext_ln1273_2_fu_987_p1;
                sext_ln1273_3_reg_1430 <= sext_ln1273_3_fu_990_p1;
                sext_ln1273_reg_1412 <= sext_ln1273_fu_980_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln281_fu_832_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    zext_ln286_reg_1265(1 downto 0) <= zext_ln286_fu_854_p1(1 downto 0);
            end if;
        end if;
    end process;
    zext_ln286_reg_1265(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    zext_ln292_reg_1640(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_condition_exit_pp0_iter0_stage3, ap_block_pp0_stage4_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage3)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;

    TWIDDLE_IMAG_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, zext_ln281_fu_844_p1, ap_block_pp0_stage0, zext_ln79_fu_902_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                TWIDDLE_IMAG_V_address0 <= zext_ln79_fu_902_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                TWIDDLE_IMAG_V_address0 <= zext_ln281_fu_844_p1(6 - 1 downto 0);
            else 
                TWIDDLE_IMAG_V_address0 <= "XXXXXX";
            end if;
        else 
            TWIDDLE_IMAG_V_address0 <= "XXXXXX";
        end if; 
    end process;


    TWIDDLE_IMAG_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            TWIDDLE_IMAG_V_ce0 <= ap_const_logic_1;
        else 
            TWIDDLE_IMAG_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    TWIDDLE_REAL_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, zext_ln281_fu_844_p1, ap_block_pp0_stage0, zext_ln79_fu_902_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                TWIDDLE_REAL_V_address0 <= zext_ln79_fu_902_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                TWIDDLE_REAL_V_address0 <= zext_ln281_fu_844_p1(6 - 1 downto 0);
            else 
                TWIDDLE_REAL_V_address0 <= "XXXXXX";
            end if;
        else 
            TWIDDLE_REAL_V_address0 <= "XXXXXX";
        end if; 
    end process;


    TWIDDLE_REAL_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            TWIDDLE_REAL_V_ce0 <= ap_const_logic_1;
        else 
            TWIDDLE_REAL_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    a_imag_V_2_fu_1171_p2 <= std_logic_vector(unsigned(r_imag_V_11_reg_1486) - unsigned(r_imag_V_12_fu_1156_p4));
    a_real_V_6_fu_1095_p2 <= std_logic_vector(unsigned(r_real_V_8_reg_1446) - unsigned(r_real_V_9_fu_1080_p4));
    add_ln281_fu_838_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_k_1) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, icmp_ln281_reg_1251)
    begin
        if (((icmp_ln281_reg_1251 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage3;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_k_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, k_fu_146, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_k_1 <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_k_1 <= k_fu_146;
        end if; 
    end process;

    b_imag_V_1_fu_959_p5 <= k_1_reg_1242(3 downto 2);
    b_imag_V_3_fu_1166_p2 <= std_logic_vector(unsigned(r_imag_V_12_fu_1156_p4) + unsigned(r_imag_V_11_reg_1486));
    b_imag_V_fu_931_p5 <= k_1_reg_1242(3 downto 2);
    b_real_V_1_fu_945_p5 <= k_1_reg_1242(3 downto 2);
    b_real_V_3_fu_1090_p2 <= std_logic_vector(unsigned(r_real_V_9_fu_1080_p4) + unsigned(r_real_V_8_reg_1446));
    b_real_V_fu_917_p5 <= k_1_reg_1242(3 downto 2);
    e_out_imag_V_1_address0 <= zext_ln286_reg_1265(2 - 1 downto 0);

    e_out_imag_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_imag_V_1_ce0 <= ap_const_logic_1;
        else 
            e_out_imag_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_imag_V_2_address0 <= zext_ln286_reg_1265(2 - 1 downto 0);

    e_out_imag_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_imag_V_2_ce0 <= ap_const_logic_1;
        else 
            e_out_imag_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_imag_V_3_address0 <= zext_ln286_reg_1265(2 - 1 downto 0);

    e_out_imag_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_imag_V_3_ce0 <= ap_const_logic_1;
        else 
            e_out_imag_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_imag_V_4_address0 <= zext_ln286_reg_1265(2 - 1 downto 0);

    e_out_imag_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_imag_V_4_ce0 <= ap_const_logic_1;
        else 
            e_out_imag_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_imag_V_5_address0 <= zext_ln286_reg_1265(2 - 1 downto 0);

    e_out_imag_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_imag_V_5_ce0 <= ap_const_logic_1;
        else 
            e_out_imag_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_imag_V_6_address0 <= zext_ln286_reg_1265(2 - 1 downto 0);

    e_out_imag_V_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_imag_V_6_ce0 <= ap_const_logic_1;
        else 
            e_out_imag_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_imag_V_7_address0 <= zext_ln286_reg_1265(2 - 1 downto 0);

    e_out_imag_V_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_imag_V_7_ce0 <= ap_const_logic_1;
        else 
            e_out_imag_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_imag_V_address0 <= zext_ln286_reg_1265(2 - 1 downto 0);

    e_out_imag_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_imag_V_ce0 <= ap_const_logic_1;
        else 
            e_out_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_real_V_1_address0 <= zext_ln286_reg_1265(2 - 1 downto 0);

    e_out_real_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_real_V_1_ce0 <= ap_const_logic_1;
        else 
            e_out_real_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_real_V_2_address0 <= zext_ln286_reg_1265(2 - 1 downto 0);

    e_out_real_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_real_V_2_ce0 <= ap_const_logic_1;
        else 
            e_out_real_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_real_V_3_address0 <= zext_ln286_reg_1265(2 - 1 downto 0);

    e_out_real_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_real_V_3_ce0 <= ap_const_logic_1;
        else 
            e_out_real_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_real_V_4_address0 <= zext_ln286_reg_1265(2 - 1 downto 0);

    e_out_real_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_real_V_4_ce0 <= ap_const_logic_1;
        else 
            e_out_real_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_real_V_5_address0 <= zext_ln286_reg_1265(2 - 1 downto 0);

    e_out_real_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_real_V_5_ce0 <= ap_const_logic_1;
        else 
            e_out_real_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_real_V_6_address0 <= zext_ln286_reg_1265(2 - 1 downto 0);

    e_out_real_V_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_real_V_6_ce0 <= ap_const_logic_1;
        else 
            e_out_real_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_real_V_7_address0 <= zext_ln286_reg_1265(2 - 1 downto 0);

    e_out_real_V_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_real_V_7_ce0 <= ap_const_logic_1;
        else 
            e_out_real_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_out_real_V_address0 <= zext_ln286_reg_1265(2 - 1 downto 0);

    e_out_real_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            e_out_real_V_ce0 <= ap_const_logic_1;
        else 
            e_out_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_616_p_ce <= ap_const_logic_1;
    grp_fu_616_p_din0 <= sext_ln1273_2_fu_987_p1(32 - 1 downto 0);
    grp_fu_616_p_din1 <= sext_ln1273_3_fu_990_p1(18 - 1 downto 0);
    grp_fu_620_p_ce <= ap_const_logic_1;
    grp_fu_620_p_din0 <= sext_ln1273_reg_1412(32 - 1 downto 0);
    grp_fu_620_p_din1 <= sext_ln1273_3_reg_1430(18 - 1 downto 0);
    grp_fu_624_p_ce <= ap_const_logic_1;
    grp_fu_624_p_din0 <= sext_ln1273_2_reg_1424(32 - 1 downto 0);
    grp_fu_624_p_din1 <= sext_ln1273_1_reg_1418(18 - 1 downto 0);
    grp_fu_628_p_ce <= ap_const_logic_1;
    grp_fu_628_p_din0 <= sext_ln1273_4_fu_1028_p1(32 - 1 downto 0);
    grp_fu_628_p_din1 <= sext_ln1273_5_fu_1031_p1(18 - 1 downto 0);
    grp_fu_632_p_ce <= ap_const_logic_1;
    grp_fu_632_p_din0 <= sext_ln1273_6_fu_1035_p1(32 - 1 downto 0);
    grp_fu_632_p_din1 <= sext_ln1273_7_fu_1038_p1(18 - 1 downto 0);
    grp_fu_636_p_ce <= ap_const_logic_1;
    grp_fu_636_p_din0 <= sext_ln1273_4_reg_1462(32 - 1 downto 0);
    grp_fu_636_p_din1 <= sext_ln1273_7_reg_1480(18 - 1 downto 0);
    grp_fu_640_p_ce <= ap_const_logic_1;
    grp_fu_640_p_din0 <= sext_ln1273_6_reg_1474(32 - 1 downto 0);
    grp_fu_640_p_din1 <= sext_ln1273_5_reg_1468(18 - 1 downto 0);
    grp_fu_644_p_ce <= ap_const_logic_1;
    grp_fu_644_p_din0 <= sext_ln1273_fu_980_p1(32 - 1 downto 0);
    grp_fu_644_p_din1 <= sext_ln1273_1_fu_983_p1(18 - 1 downto 0);
    icmp_ln281_fu_832_p2 <= "1" when (ap_sig_allocacmp_k_1 = ap_const_lv5_10) else "0";
    o1_out_imag_V_1_address0 <= zext_ln286_fu_854_p1(2 - 1 downto 0);

    o1_out_imag_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o1_out_imag_V_1_ce0 <= ap_const_logic_1;
        else 
            o1_out_imag_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_out_imag_V_2_address0 <= zext_ln286_fu_854_p1(2 - 1 downto 0);

    o1_out_imag_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o1_out_imag_V_2_ce0 <= ap_const_logic_1;
        else 
            o1_out_imag_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_out_imag_V_3_address0 <= zext_ln286_fu_854_p1(2 - 1 downto 0);

    o1_out_imag_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o1_out_imag_V_3_ce0 <= ap_const_logic_1;
        else 
            o1_out_imag_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_out_imag_V_address0 <= zext_ln286_fu_854_p1(2 - 1 downto 0);

    o1_out_imag_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o1_out_imag_V_ce0 <= ap_const_logic_1;
        else 
            o1_out_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_out_real_V_1_address0 <= zext_ln286_fu_854_p1(2 - 1 downto 0);

    o1_out_real_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o1_out_real_V_1_ce0 <= ap_const_logic_1;
        else 
            o1_out_real_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_out_real_V_2_address0 <= zext_ln286_fu_854_p1(2 - 1 downto 0);

    o1_out_real_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o1_out_real_V_2_ce0 <= ap_const_logic_1;
        else 
            o1_out_real_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_out_real_V_3_address0 <= zext_ln286_fu_854_p1(2 - 1 downto 0);

    o1_out_real_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o1_out_real_V_3_ce0 <= ap_const_logic_1;
        else 
            o1_out_real_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o1_out_real_V_address0 <= zext_ln286_fu_854_p1(2 - 1 downto 0);

    o1_out_real_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o1_out_real_V_ce0 <= ap_const_logic_1;
        else 
            o1_out_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_out_imag_V_1_address0 <= zext_ln286_fu_854_p1(2 - 1 downto 0);

    o2_out_imag_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o2_out_imag_V_1_ce0 <= ap_const_logic_1;
        else 
            o2_out_imag_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_out_imag_V_2_address0 <= zext_ln286_fu_854_p1(2 - 1 downto 0);

    o2_out_imag_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o2_out_imag_V_2_ce0 <= ap_const_logic_1;
        else 
            o2_out_imag_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_out_imag_V_3_address0 <= zext_ln286_fu_854_p1(2 - 1 downto 0);

    o2_out_imag_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o2_out_imag_V_3_ce0 <= ap_const_logic_1;
        else 
            o2_out_imag_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_out_imag_V_address0 <= zext_ln286_fu_854_p1(2 - 1 downto 0);

    o2_out_imag_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o2_out_imag_V_ce0 <= ap_const_logic_1;
        else 
            o2_out_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_out_real_V_1_address0 <= zext_ln286_fu_854_p1(2 - 1 downto 0);

    o2_out_real_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o2_out_real_V_1_ce0 <= ap_const_logic_1;
        else 
            o2_out_real_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_out_real_V_2_address0 <= zext_ln286_fu_854_p1(2 - 1 downto 0);

    o2_out_real_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o2_out_real_V_2_ce0 <= ap_const_logic_1;
        else 
            o2_out_real_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_out_real_V_3_address0 <= zext_ln286_fu_854_p1(2 - 1 downto 0);

    o2_out_real_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o2_out_real_V_3_ce0 <= ap_const_logic_1;
        else 
            o2_out_real_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o2_out_real_V_address0 <= zext_ln286_fu_854_p1(2 - 1 downto 0);

    o2_out_real_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o2_out_real_V_ce0 <= ap_const_logic_1;
        else 
            o2_out_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_0_address0 <= zext_ln292_reg_1640(3 - 1 downto 0);

    out_imag_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_imag_0_ce0 <= ap_const_logic_1;
        else 
            out_imag_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_0_d0 <= r_imag_V_fu_1211_p2;

    out_imag_0_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_reg_1408_pp0_iter1_reg, ap_block_pp0_stage3_11001)
    begin
        if (((tmp_reg_1408_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_imag_0_we0 <= ap_const_logic_1;
        else 
            out_imag_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_1_address0 <= zext_ln292_reg_1640(3 - 1 downto 0);

    out_imag_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_imag_1_ce0 <= ap_const_logic_1;
        else 
            out_imag_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_1_d0 <= r_imag_V_fu_1211_p2;

    out_imag_1_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_reg_1408_pp0_iter1_reg, ap_block_pp0_stage3_11001)
    begin
        if (((tmp_reg_1408_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_imag_1_we0 <= ap_const_logic_1;
        else 
            out_imag_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_2_address0 <= zext_ln292_fu_1182_p1(3 - 1 downto 0);

    out_imag_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_imag_2_ce0 <= ap_const_logic_1;
        else 
            out_imag_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_2_d0 <= r_imag_V_6_fu_1193_p2;

    out_imag_2_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, tmp_reg_1408_pp0_iter1_reg)
    begin
        if (((tmp_reg_1408_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_imag_2_we0 <= ap_const_logic_1;
        else 
            out_imag_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_3_address0 <= zext_ln292_fu_1182_p1(3 - 1 downto 0);

    out_imag_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_imag_3_ce0 <= ap_const_logic_1;
        else 
            out_imag_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_3_d0 <= r_imag_V_6_fu_1193_p2;

    out_imag_3_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, tmp_reg_1408_pp0_iter1_reg)
    begin
        if (((tmp_reg_1408_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_imag_3_we0 <= ap_const_logic_1;
        else 
            out_imag_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_4_address0 <= zext_ln292_reg_1640(3 - 1 downto 0);

    out_imag_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_imag_4_ce0 <= ap_const_logic_1;
        else 
            out_imag_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_4_d0 <= r_imag_V_7_fu_1223_p2;

    out_imag_4_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_reg_1408_pp0_iter1_reg, ap_block_pp0_stage3_11001)
    begin
        if (((tmp_reg_1408_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_imag_4_we0 <= ap_const_logic_1;
        else 
            out_imag_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_5_address0 <= zext_ln292_reg_1640(3 - 1 downto 0);

    out_imag_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_imag_5_ce0 <= ap_const_logic_1;
        else 
            out_imag_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_5_d0 <= r_imag_V_7_fu_1223_p2;

    out_imag_5_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_reg_1408_pp0_iter1_reg, ap_block_pp0_stage3_11001)
    begin
        if (((tmp_reg_1408_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_imag_5_we0 <= ap_const_logic_1;
        else 
            out_imag_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_6_address0 <= zext_ln292_fu_1182_p1(3 - 1 downto 0);

    out_imag_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_imag_6_ce0 <= ap_const_logic_1;
        else 
            out_imag_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_6_d0 <= r_imag_V_9_fu_1205_p2;

    out_imag_6_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, tmp_reg_1408_pp0_iter1_reg)
    begin
        if (((tmp_reg_1408_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_imag_6_we0 <= ap_const_logic_1;
        else 
            out_imag_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_7_address0 <= zext_ln292_fu_1182_p1(3 - 1 downto 0);

    out_imag_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_imag_7_ce0 <= ap_const_logic_1;
        else 
            out_imag_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_imag_7_d0 <= r_imag_V_9_fu_1205_p2;

    out_imag_7_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, tmp_reg_1408_pp0_iter1_reg)
    begin
        if (((tmp_reg_1408_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_imag_7_we0 <= ap_const_logic_1;
        else 
            out_imag_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_0_address0 <= zext_ln292_fu_1182_p1(3 - 1 downto 0);

    out_real_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_real_0_ce0 <= ap_const_logic_1;
        else 
            out_real_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_0_d0 <= r_real_V_fu_1176_p2;

    out_real_0_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, tmp_reg_1408_pp0_iter1_reg)
    begin
        if (((tmp_reg_1408_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_real_0_we0 <= ap_const_logic_1;
        else 
            out_real_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_1_address0 <= zext_ln292_fu_1182_p1(3 - 1 downto 0);

    out_real_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_real_1_ce0 <= ap_const_logic_1;
        else 
            out_real_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_1_d0 <= r_real_V_fu_1176_p2;

    out_real_1_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, tmp_reg_1408_pp0_iter1_reg)
    begin
        if (((tmp_reg_1408_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_real_1_we0 <= ap_const_logic_1;
        else 
            out_real_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_2_address0 <= zext_ln292_reg_1640(3 - 1 downto 0);

    out_real_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_real_2_ce0 <= ap_const_logic_1;
        else 
            out_real_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_2_d0 <= r_real_V_5_fu_1217_p2;

    out_real_2_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_reg_1408_pp0_iter1_reg, ap_block_pp0_stage3_11001)
    begin
        if (((tmp_reg_1408_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_real_2_we0 <= ap_const_logic_1;
        else 
            out_real_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_3_address0 <= zext_ln292_reg_1640(3 - 1 downto 0);

    out_real_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_real_3_ce0 <= ap_const_logic_1;
        else 
            out_real_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_3_d0 <= r_real_V_5_fu_1217_p2;

    out_real_3_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_reg_1408_pp0_iter1_reg, ap_block_pp0_stage3_11001)
    begin
        if (((tmp_reg_1408_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_real_3_we0 <= ap_const_logic_1;
        else 
            out_real_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_4_address0 <= zext_ln292_fu_1182_p1(3 - 1 downto 0);

    out_real_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_real_4_ce0 <= ap_const_logic_1;
        else 
            out_real_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_4_d0 <= r_real_V_6_fu_1199_p2;

    out_real_4_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, tmp_reg_1408_pp0_iter1_reg)
    begin
        if (((tmp_reg_1408_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_real_4_we0 <= ap_const_logic_1;
        else 
            out_real_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_5_address0 <= zext_ln292_fu_1182_p1(3 - 1 downto 0);

    out_real_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_real_5_ce0 <= ap_const_logic_1;
        else 
            out_real_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_5_d0 <= r_real_V_6_fu_1199_p2;

    out_real_5_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, tmp_reg_1408_pp0_iter1_reg)
    begin
        if (((tmp_reg_1408_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_real_5_we0 <= ap_const_logic_1;
        else 
            out_real_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_6_address0 <= zext_ln292_reg_1640(3 - 1 downto 0);

    out_real_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_real_6_ce0 <= ap_const_logic_1;
        else 
            out_real_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_6_d0 <= r_real_V_7_fu_1229_p2;

    out_real_6_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_reg_1408_pp0_iter1_reg, ap_block_pp0_stage3_11001)
    begin
        if (((tmp_reg_1408_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_real_6_we0 <= ap_const_logic_1;
        else 
            out_real_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_7_address0 <= zext_ln292_reg_1640(3 - 1 downto 0);

    out_real_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_real_7_ce0 <= ap_const_logic_1;
        else 
            out_real_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_real_7_d0 <= r_real_V_7_fu_1229_p2;

    out_real_7_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_reg_1408_pp0_iter1_reg, ap_block_pp0_stage3_11001)
    begin
        if (((tmp_reg_1408_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_real_7_we0 <= ap_const_logic_1;
        else 
            out_real_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    r_imag_V_12_fu_1156_p4 <= ret_V_3_fu_1152_p2(47 downto 16);
    r_imag_V_6_fu_1193_p2 <= std_logic_vector(unsigned(a_imag_V_3_reg_1622) - unsigned(a_real_V_6_reg_1598));
    r_imag_V_7_fu_1223_p2 <= std_logic_vector(unsigned(a_imag_V_1_reg_1610) - unsigned(b_imag_V_3_reg_1628));
    r_imag_V_9_fu_1205_p2 <= std_logic_vector(unsigned(a_imag_V_3_reg_1622) + unsigned(a_real_V_6_reg_1598));
    r_imag_V_fu_1211_p2 <= std_logic_vector(unsigned(a_imag_V_1_reg_1610) + unsigned(b_imag_V_3_reg_1628));
    r_real_V_5_fu_1217_p2 <= std_logic_vector(unsigned(a_real_V_3_reg_1616) + unsigned(a_imag_V_2_reg_1634));
    r_real_V_6_fu_1199_p2 <= std_logic_vector(unsigned(a_real_V_1_reg_1604) - unsigned(b_real_V_3_reg_1592));
    r_real_V_7_fu_1229_p2 <= std_logic_vector(unsigned(a_real_V_3_reg_1616) - unsigned(a_imag_V_2_reg_1634));
    r_real_V_9_fu_1080_p4 <= ret_V_2_fu_1076_p2(47 downto 16);
    r_real_V_fu_1176_p2 <= std_logic_vector(unsigned(a_real_V_1_reg_1604) + unsigned(b_real_V_3_reg_1592));
    ret_V_1_fu_1054_p2 <= std_logic_vector(unsigned(mul_ln1347_reg_1457) + unsigned(mul_ln813_1_reg_1452));
    ret_V_2_fu_1076_p2 <= std_logic_vector(unsigned(mul_ln813_2_reg_1492) - unsigned(mul_ln1348_1_reg_1497));
    ret_V_3_fu_1152_p2 <= std_logic_vector(unsigned(mul_ln1347_1_reg_1587) + unsigned(mul_ln813_3_reg_1582));
    ret_V_fu_1014_p2 <= std_logic_vector(unsigned(mul_ln813_reg_1436) - unsigned(mul_ln1348_reg_1441));
        sext_ln1273_1_fu_983_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_816),48));

        sext_ln1273_2_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_imag_V_reg_1393),48));

        sext_ln1273_3_fu_990_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_820),48));

        sext_ln1273_4_fu_1028_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_real_V_1_reg_1398),48));

        sext_ln1273_5_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_816),48));

        sext_ln1273_6_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_imag_V_1_reg_1403),48));

        sext_ln1273_7_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_820),48));

        sext_ln1273_fu_980_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_real_V_reg_1388),48));

    shl_ln2_fu_888_p3 <= (trunc_ln284_fu_885_p1 & ap_const_lv2_0);
    sub_ln284_fu_896_p2 <= std_logic_vector(unsigned(shl_ln2_fu_888_p3) - unsigned(zext_ln281_1_fu_882_p1));
    trunc_ln281_1_fu_850_p1 <= ap_sig_allocacmp_k_1(2 - 1 downto 0);
    trunc_ln281_fu_879_p1 <= k_1_reg_1242(3 - 1 downto 0);
    trunc_ln284_fu_885_p1 <= k_1_reg_1242(4 - 1 downto 0);
    zext_ln281_1_fu_882_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_1_reg_1242),6));
    zext_ln281_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_k_1),64));
    zext_ln286_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln281_1_fu_850_p1),64));
    zext_ln292_fu_1182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln281_reg_1365_pp0_iter1_reg),64));
    zext_ln79_fu_902_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln284_fu_896_p2),64));
end behav;
